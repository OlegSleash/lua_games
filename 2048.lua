--2048
-- Сделать 2 таблицы, одна для рендра вторая реальная
-- Сделал, оби одна таблица - это пиздец, некоторые анимки рендрятся правильно, но исполняются не в нужном порядке, что может тупо удалить предмет

-- Сеттингс: цель, размер, свайп, скорость аним
-- Винлос + инфобар: тайм (похуй, вспомнил когда переписывал тему на БХ)) ), счёт + бест

local imgui, encoding = require 'mimgui', require 'encoding'
encoding.default = 'CP1251'
u8 = encoding.UTF8
local WinOpen = imgui.new.bool()
local params = {square_lot = 4,game_step = 1}
local r = 0
local data = {
    MoveFrames = 5,
    MoveAnims = {},
    --MoveAnims[cellid] = {F = frames, X = offsetX, Y = offsetY, FF = finalFund}
    cell_size = 0,
    mainTable = {},
    renderTable = {},
    score = 0,
    ininame = '2048sleash.ini',
    swipe_pos = {},
};
local ini = require 'inicfg'
local set = ini.load({
    tzft = {
        bestscore = 0,
        score = 0,
        final = 12,
        square_lot = 4
    }, lastgame = {}
    }, data.ininame
)
local imgui_square_lot = imgui.new.int(set.tzft.square_lot)
local imgui_final = imgui.new.int(set.tzft.final)
function random(x, y)
    x = x or 0
    y = y or 0
    math.randomseed(os.time() * math.random(1000, 1000000))
    r = r + tonumber(math.random(1000, 1000000))
    if x == 0 and y == 0 then math.randomseed(r) if (math.random(r) % 2) == 1 then return 1 else return 0 end
    elseif x ~= 0 and y == 0 then math.randomseed(r) return math.random(x)
    else math.randomseed(r) return math.random(x, y) end
end
function Start2048()
    set.tzft.final = imgui_final[0]
    set.tzft.square_lot = imgui_square_lot[0]
   params.game_step = 1
   data.MoveAnims = {}
   if #data.mainTable == 0 then
    data.score = 0
    for i = 1, set.tzft.square_lot*set.tzft.square_lot do data.mainTable[i] = 0 end
    data.mainTable[random(set.tzft.square_lot*set.tzft.square_lot)] = 2 end
   for i, v in ipairs(data.mainTable) do data.renderTable[i] = v; set.lastgame[i] = v end
    set.tzft.score = data.score; ini.save(set, data.ininame);
   WinOpen[0] = true
end
function GetAnimInfo(cellid) for k, v in ipairs(data.MoveAnims) do if v.C == cellid then return v end end return false end
function AddMoveAnim(startCell, finishCell)
    if GetAnimInfo(startCell) then return false end
    local r1, c1 = GetRowAndCol(startCell)
    local r2, c2 = GetRowAndCol(finishCell)
    local dist = ((c2-c1) + (r2-r1))
    if dist == 0 then return false end
    table.insert(data.MoveAnims, {C = startCell,
        CF = data.MoveFrames * math.abs(dist),
        F = data.MoveFrames*math.abs(dist),
        X = (c2-c1)* ((data.cell_size*1.2)/(data.MoveFrames*math.abs(dist))),
        Y = (r2-r1)* ((data.cell_size*1.2)/(data.MoveFrames*math.abs(dist)))
    }); 
end
function GetRowAndCol(cellid, lot) lot = lot or set.tzft.square_lot; return math.ceil(cellid/lot), (cellid%lot == 0 and lot or cellid%lot) end
local MovesData = {
    [1] = { -- left
        GetNC = function(i, lot) return i end,
        GetEdge = function(NC, lot) return (NC%lot ~= 0) end,
        GetForVars = function(NC, lot) return NC+1, math.ceil(NC/lot)*lot, 1 end,
    }, [2] = { -- right
        GetNC = function(i, lot) return math.ceil(i/lot)*lot +1 - (i%lot ~= 0 and i%lot or lot) end,
        GetEdge = function(NC, lot) return (NC%lot ~= 1) end,
        GetForVars = function(NC, lot) return NC-1, (1 + lot*(math.ceil(NC/lot)-1)), -1 end,
    }, [3] = { -- up
        GetNC = function(i, lot) return (math.ceil(i/lot)-1) + lot*((i%lot == 0 and lot or i%lot)-1) + 1 end,
        GetEdge = function(NC, lot) return NC <= lot*(lot-1) end,
        GetForVars = function(NC, lot) return NC+lot, NC + lot*(lot-math.ceil(NC/lot)), lot end,
    }, [4] = { -- down
        GetNC = function(i, lot) return lot^2 -(lot-math.ceil(i/lot)) - lot*((i%lot == 0 and lot or i%lot)-1) end,
        GetEdge = function(NC, lot) return NC > lot end,
        GetForVars = function(NC, lot) return NC-lot, (NC%lot == 0 and lot or NC%lot), -lot end,
}   }
function Move(kuda)
   if params.game_step ~= 1 then return false end
   if #data.MoveAnims > 0 then return false end
    local lot = set.tzft.square_lot
    local i = 0
    while i < lot^2 do
        i = i + 1
        local NC = MovesData[kuda].GetNC(i,lot) -- nums for right
        if MovesData[kuda].GetEdge(NC,lot) then
            local ForVar1, ForVar2, ForVar3 = MovesData[kuda].GetForVars(NC,lot)
            for j = ForVar1, ForVar2, ForVar3 do
                if data.mainTable[NC] == 0 and data.mainTable[j] ~= 0 then
                    AddMoveAnim(j, NC);
                    data.mainTable[NC] = data.mainTable[j]; data.mainTable[j] = 0;
                    i = i - 1; break
                elseif data.mainTable[j] ~= 0 then
                    if data.mainTable[j] ~= data.mainTable[NC] then
                        AddMoveAnim(j, NC+ForVar3);
                        data.mainTable[NC+ForVar3] = data.mainTable[j]
                        if NC+ForVar3 ~= j then data.mainTable[j] = 0 end
                        break
                    else
                        AddMoveAnim(j, NC);
                        data.mainTable[NC] = data.mainTable[NC]*2; data.mainTable[j] = 0; data.score = data.score + data.mainTable[NC]; break
end end end end end end
function CAUMaxScore()
    set.tzft.bestscore = math.max(set.tzft.bestscore, data.score);
    set.tzft.score = 0; set.lastgame = {}
    ini.save(set, data.ininame)
end
function afterMove()
    if #data.MoveAnims == 0 then return false end
    data.MoveAnims = {}
    -- check lose
    lot = set.tzft.square_lot
    local function IsCellValid(cellid) if cellid > 0 and cellid < 17 then return true else return false end end;
    local function CheckLose()
        for i = 1, lot^2 do
            if data.mainTable[i] == 0 then return false end
            if IsCellValid(i + 1)   and data.mainTable[i] == data.mainTable[i + 1]   then return false end
            if IsCellValid(i - 1)   and data.mainTable[i] == data.mainTable[i - 1]   then return false end
            if IsCellValid(i + lot) and data.mainTable[i] == data.mainTable[i + lot] then return false end
            if IsCellValid(i - lot) and data.mainTable[i] == data.mainTable[i - lot] then return false end
        end
        return true
    end
    local rnd; 
    repeat rnd = random(1, lot^2) until data.mainTable[rnd] == 0
    data.mainTable[rnd] = (random(1, 4) == 4 and 4 or 2)
    if CheckLose() then params.game_step = 0; CAUMaxScore(); end
    -- check win
    for i = 1, lot^2 do if data.mainTable[i] == 2^set.tzft.final then params.game_step = 2; CAUMaxScore(); end end
    for i, v in ipairs(data.mainTable) do data.renderTable[i] = v; set.lastgame[i] = v end
    set.tzft.score = data.score; ini.save(set, data.ininame);
end
function main()
   while not isSampAvailable() do wait(100) end
    for i, v in pairs(set.lastgame) do data.mainTable[i] = v end
    data.score = set.tzft.score
   --sampRegisterChatCommand('2048', function() if WinOpen[0] == false then Start2048() else WinOpen[0] = false end end)
   wait(-1)
end
function GetPow(c) return (math.floor(math.log(c,2)+0.5)) end
imgui.OnInitialize(function()
--    imgui.GetIO().Fonts:Clear()
    FontForCells =  imgui.GetIO().Fonts:AddFontFromFileTTF(getFolderPath(0x14) .. '\\trebucbd.ttf', 100, nil, imgui.GetIO().Fonts:GetGlyphRangesCyrillic())
end)
local Win = imgui.OnFrame(function() return WinOpen[0] end,
function(player)
    if imgui.GetFrameCount() == 1 then sampAddChatMessage("[2048] {ffffff}Для открытия/закрытия меню настроек нажмите ПКМ в любом месте окна", 0xFFdae4ee) end
    imgui.GetIO().ConfigWindowsMoveFromTitleBarOnly = true
   imgui.Begin('2048', WinOpen, imgui.WindowFlags.NoScrollbar)
   local dl = imgui.GetWindowDrawList()
   local WP = imgui.GetWindowPos()
   local WS = imgui.GetWindowSize()
   if not data.settings then
    if imgui.IsMouseDragging() and #data.swipe_pos == 0 and imgui.GetMousePos().y > WP.y+20 and imgui.GetMouseCursor() == 0 then data.swipe_pos[1] = imgui.GetMousePos()
    elseif not imgui.IsMouseDragging() and #data.swipe_pos == 1 then data.swipe_pos[2] = imgui.GetMousePos(); Swipe(data.swipe_pos); data.swipe_pos = {} end
   local Vec2 = imgui.ImVec2
    dl:AddRectFilled(WP, Vec2(WP.x+WS.x+15, WP.y+WS.y), 0xFF727b89)
        local OffsetYforInfo = data.cell_size
      data.cell_size = (math.min(WS.x-5, WS.y-30-OffsetYforInfo))/(set.tzft.square_lot*1.2)

        dl:AddRectFilled({
                x = WP.x + set.tzft.square_lot*0.6*data.cell_size - data.cell_size*2,
                y = WP.y + OffsetYforInfo*0.6+30-data.cell_size/4
            }, {
                x = WP.x + set.tzft.square_lot*0.6*data.cell_size - data.cell_size*0.5,
                y = WP.y + OffsetYforInfo*0.6+30+data.cell_size/4
            }, 0xFFb4c1d2, 15
        )
        local ScoreText = "Score: "..data.score
        imgui.SetWindowFontScale(data.cell_size/70)
        imgui.SetCursorPos({
            x = set.tzft.square_lot*0.6*data.cell_size - data.cell_size*1.25 - imgui.CalcTextSize(ScoreText).x/2,
            y = OffsetYforInfo*0.6+30 - imgui.CalcTextSize(ScoreText).y/2,
        }); imgui.TextColored(imgui.ColorConvertU32ToFloat4(0xFF656e77), ScoreText);

            dl:AddRectFilled({
                x = WP.x + set.tzft.square_lot*0.6*data.cell_size + data.cell_size*0.5,
                y = WP.y + OffsetYforInfo*0.6+30-data.cell_size/4
            }, {
                x = WP.x + set.tzft.square_lot*0.6*data.cell_size + data.cell_size*2,
                y = WP.y + OffsetYforInfo*0.6+30+data.cell_size/4
            }, 0xFFb4c1d2, 15
        )
        ScoreText = "Max: "..set.tzft.bestscore
        imgui.SetWindowFontScale(data.cell_size/70)
        imgui.SetCursorPos({
            x = set.tzft.square_lot*0.6*data.cell_size + data.cell_size*1.25 - imgui.CalcTextSize(ScoreText).x/2,
            y = OffsetYforInfo*0.6+30 - imgui.CalcTextSize(ScoreText).y/2,
        }); imgui.TextColored(imgui.ColorConvertU32ToFloat4(0xFF656e77), ScoreText);


        imgui.SetWindowFontScale(1)
      local cpos = {x = 10, y = 30+OffsetYforInfo}
      for i = 1, set.tzft.square_lot*set.tzft.square_lot do
        dl:AddRectFilled(
           {x = WP.x + cpos.x, y = WP.y + cpos.y},
           {x = WP.x + cpos.x + data.cell_size, y = WP.y + cpos.y + data.cell_size},
           0xFFb4c1d2, data.cell_size^0.5
        )
        cpos.x = cpos.x + data.cell_size + data.cell_size/5
        if (i % set.tzft.square_lot) == 0 then cpos.x = 10; cpos.y = cpos.y + data.cell_size + data.cell_size/5 end
    end; cpos = {x = 10, y = 30+OffsetYforInfo}
      for i = 1, set.tzft.square_lot*set.tzft.square_lot do
         imgui.SetCursorPos(cpos)
         if data.renderTable[i] > 0 then
            local TextColor, BGColor, CText = GetCellInfo(GetPow(data.renderTable[i]))
            TextColor = imgui.ColorConvertU32ToFloat4(TextColor)

   imgui.PushFont(FontForCells)
            imgui.SetWindowFontScale(data.cell_size/(100*(math.ceil(CText:len()/2))))
            local texts = imgui.CalcTextSize(CText)
            local offsetX, offsetY = 0, 0
            if GetAnimInfo(i) then
                v = GetAnimInfo(i)
                offsetX = v.X * (v.CF-v.F)
                offsetY = v.Y * (v.CF-v.F)
            end
            dl:AddRectFilled(
               {x = offsetX + WP.x + cpos.x, y = offsetY + WP.y + cpos.y},
               {x = offsetX + WP.x + cpos.x + data.cell_size, y = offsetY + WP.y + cpos.y + data.cell_size},
               BGColor, data.cell_size^0.5
            )

            imgui.SetCursorPos({x = offsetX + cpos.x + data.cell_size/2 - texts.x/2, y = offsetY + cpos.y + data.cell_size/2 - texts.y/2})
            imgui.TextColored(TextColor, CText);

            imgui.SetWindowFontScale(1.0)
      imgui.PopFont()
         end

         cpos.x = cpos.x + data.cell_size + data.cell_size/5
         if (i % set.tzft.square_lot) == 0 then cpos.x = 10; cpos.y = cpos.y + data.cell_size + data.cell_size/5 end
      end
   if params.game_step == 0 then
        dl:AddRectFilled({
            x= WP.x + 10, y = WP.y + 30+OffsetYforInfo}, {
            x= WP.x + 10 + (set.tzft.square_lot-1)*data.cell_size*1.2 + data.cell_size+1,
            y= WP.y + 30+OffsetYforInfo + (set.tzft.square_lot-1)*data.cell_size*1.2 + data.cell_size+1},
            0xBB000000, 7
        )
        local LoseTexts = {
            u8"К сожалению Вы проиграли.",
            u8"Но Вы можете попробовать снова!",
        }

        for i, v in pairs(LoseTexts) do
            local CalcNowText = imgui.CalcTextSize(v)
            imgui.SetCursorPos({x=10+((set.tzft.square_lot)/2-1)*data.cell_size*1.2+data.cell_size-CalcNowText.x/2, y = 30+OffsetYforInfo + CalcNowText.y*(i-1)})
            imgui.Text(v)
        end
   elseif params.game_step == 2 then
        dl:AddRectFilled({
            x= WP.x + 10, y = WP.y + 30+OffsetYforInfo}, {
            x= WP.x + 10 + (set.tzft.square_lot-1)*data.cell_size*1.2 + data.cell_size+1,
            y= WP.y + 30+OffsetYforInfo + (set.tzft.square_lot-1)*data.cell_size*1.2 + data.cell_size+1},
            0xBB000000, 7
        )
        local WinTexts = {
            u8"Поздравляю, Вы победили!",
            u8"Можете попробовать более высокую цель!",
        }

        for i, v in pairs(WinTexts) do
            local CalcNowText = imgui.CalcTextSize(v)
            imgui.SetCursorPos({x=10+((set.tzft.square_lot)/2-1)*data.cell_size*1.2+data.cell_size-CalcNowText.x/2, y = 30+OffsetYforInfo + CalcNowText.y*(i-1)})
            imgui.Text(v)
        end
   end
   --[[imgui.Separator()
   imgui.SetCursorPosX(53)
   if imgui.Button('Up', imgui.ImVec2(45,45)) then MaMtoup() end
   imgui.SetCursorPosX(0)
   if imgui.Button('Left', imgui.ImVec2(45,45)) then MaMtoleft() end imgui.SameLine()
   if imgui.Button('Down', imgui.ImVec2(45,45)) then MaMtodown() end imgui.SameLine()
   if imgui.Button('Right', imgui.ImVec2(45,45)) then MaMtoright() end
   imgui.Text(u8'Количество клеток на одной стороне:') imgui.SameLine() imgui.SetNextItemWidth(75)
   if imgui.InputInt('  ', imgui_square_lot) then
   if imgui_square_lot[0] < 4 then sampAddChatMessage('{00FF00}[2048]{FFFFFF} Количество клеток на одной стороне не может быть меньше четырёх!') imgui_square_lot[0] = 4
   elseif imgui_square_lot[0] ~= nil then set.tzft.square_lot = imgui_square_lot[0] Start2048() end end
   if imgui.Button(u8'Начать сначала') then Start2048() end]]
   if #data.MoveAnims > 0 then for i, v in ipairs(data.MoveAnims) do
        data.MoveAnims[i].F = data.MoveAnims[i].F - 1
        if data.MoveAnims[i].F <= 0 then
            data.MoveAnims[i].F = 0
            local allf = 0; for i, v in ipairs(data.MoveAnims) do allf = allf + v.F end
            --data.MoveAnims[i].FF()
            --table.remove(data.MoveAnims, i)
           --print(v.C, v.CF)
            if allf == 0 then afterMove(); break
    end end end end
    else
        imgui.PushTextWrapPos(WS.x)
        imgui.Text(u8[[
Управление:
    Вверх/Влево/Вправо/Вниз: W/A/S/D соответственно
    Рестарт игры: R
    Закрыть окно с игрый: Backspace

Информация:
    Так же предусмотрено управление свайпами мышки
    Для перемещения окна - перемещайте за титлбар (синяя полоска сверху)
    Помимо сохранения лучшего счёта сохраняется и игра, то есть после перезапуска игры/скриптов вы сможете продолжить партию

Настройки:
]])
        imgui.Text(u8"Выберите ниже конечную цель игры:")
        imgui.PushStyleColorU32(imgui.Col.Text, 0)
        imgui.SetNextItemWidth(-1)
        imgui.SliderInt("##final",imgui_final,6,20)
        imgui.PopStyleColor(1)
        local Val = tostring(2^imgui_final[0])
        local ValC = imgui.CalcTextSize(Val)
        imgui.SetCursorPos({x = WS.x/2-ValC.x/2,y=imgui.GetCursorPosY()-ValC.y*1.5}); imgui.Text(Val)

        imgui.Text(u8"Выберите ниже конечную цель игры:")
        imgui.PushStyleColorU32(imgui.Col.Text, 0)
        imgui.SetNextItemWidth(-1)
        imgui.SliderInt("#squareLot", imgui_square_lot, 4, 10)
        imgui.PopStyleColor(1)
        local Val = tostring(imgui_square_lot[0]..'x'..imgui_square_lot[0])
        local ValC = imgui.CalcTextSize(Val)
        imgui.SetCursorPos({x = WS.x/2-ValC.x/2,y=imgui.GetCursorPosY()-ValC.y*1.5}); imgui.Text(Val)

        imgui.SetWindowFontScale(0.85)
        imgui.Text(u8"Все изменения будут применены и сохранены только при старте новой игре")
        imgui.Text(u8"Для того что бы принудильно запустить новую игру: Выйдите из настроек и нажмите R")
        imgui.PopTextWrapPos()
        imgui.SetWindowFontScale(1)
    end
    if imgui.IsMouseReleased(1) and params.game_step == 1 then data.settings = not data.settings end
   imgui.End()
end)
function GetCellInfo(power)
   --                             number,   bg
   if     power == 1 then return 0xFF656e77, 0xFFdae4ee, "2";
   elseif power == 2 then return 0xFF656e77, 0xFFc8e0ed, "4";
   elseif power == 3 then return 0xFFf2f6f9, 0xFF79b1f2, "8";
   elseif power == 4 then return 0xFFf2f6f9, 0xFF6395f5, "16";
   elseif power == 5 then return 0xFFf2f6f9, 0xFF5f7cf6, "32";
   elseif power == 6 then return 0xFFf2f6f9, 0xFF3b5ef6, "64";
   elseif power == 7 then return 0xFFf2f6f9, 0xFF72cfed, "128";
   elseif power == 8 then return 0xFFf2f6f9, 0xFF61cced, "256";
   elseif power == 9 then return 0xFFf2f6f9, 0xFF50c8ed, "512";
   elseif power ==10 then return 0xFFf2f6f9, 0xFF3fc5ed, "1024";
   elseif power ==11 then return 0xFFf2f6f9, 0xFF2ec2ed, "2048";
   elseif power ==12 then return 0xFFf2f6f9, 0xFF333a3d, "4096";
   elseif power ==13 then return 0xFFf2f6f9, 0xFF333a3d, "8192";
   elseif power ==14 then return 0xFFf2f6f9, 0xFF333a3d, "16K";
   elseif power ==15 then return 0xFFf2f6f9, 0xFF333a3d, "32K";
   elseif power ==16 then return 0xFFf2f6f9, 0xFF333a3d, "65K";
   elseif power ==17 then return 0xFFf2f6f9, 0xFF333a3d, "131K";
   elseif power ==18 then return 0xFFf2f6f9, 0xFFc46b69, "262K";
   elseif power ==19 then return 0xFFf2f6f9, 0xFFc46b69, "524K";
   elseif power ==20 then return 0xFFf2f6f9, 0xFFc46b69, "1048K";
end end
addEventHandler('onWindowMessage', function(msg, key)
    if WinOpen[0] and msg == 0x0100 then
        if     key == 0x57 and not data.settings then Move(3) -- up
        elseif key == 0x53 and not data.settings then Move(4) -- down
        elseif key == 0x41 and not data.settings then Move(1) -- left
        elseif key == 0x44 and not data.settings then Move(2) -- right
        elseif key == 0x52 and not data.settings then data.mainTable = {}; Start2048()
        elseif key == 0x08 and not data.settings then WinOpen[0] = false
        else return; end
        consumeWindowMessage(true, true)
    end
end)
function Swipe(pos)
    local deltaX = math.max(pos[1].x, pos[2].x) - math.min(pos[1].x, pos[2].x)
    local deltaY = math.max(pos[1].y, pos[2].y) - math.min(pos[1].y, pos[2].y)
    if deltaY == deltaX then if math.random(0, 1) == 0 then deltaY = 0 else deltaX = 0 end end
    if deltaX > deltaY and deltaX > data.cell_size*0.6 then
        if pos[1].x > pos[2].x then Move(1) --left
        else Move(2) end -- right
    elseif deltaY > data.cell_size*0.6 then
        if pos[1].y > pos[2].y then Move(3) -- up
        else Move(4) end -- down
    end
end
-- sleash games (SampGameStore) project
local sleashGames = {}
sleashGames.v = 1
sleashGames.start = function() if WinOpen[0] == false then Start2048() else WinOpen[0] = false end end
sleashGames.name = u8"2048"
sleashGames.gitname = "2048.lua"
sleashGames.author = "Sleash"
sleashGames.description = u8[[2048 - переписанная под mimgui популярная головоломка, принцип которой в перемещении плиток]]
sleashGames.min_ver_sgs = 1
sleashGames.GetState = function() return WinOpen[0] end
sleashGames.SetState = function(st) WinOpen[0] = st end
sleashGames.icon = {
    base85 ="\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x00\x00\x00\xF2\x00\x00\x00\xF2\x08\x06\x00\x00\x00\x77\x68\x98\xA4\x00\x00\x00\xE1\x69\x43\x43\x50\x73\x52\x47\x42\x00\x00\x18\x95\x63\x60\x60\x3C\xCD\x00\x04\x4C\x0E\x0C\x0C\xB9\x79\x25\x45\x41\xEE\x4E\x0A\x11\x91\x51\x0A\x0C\x48\x20\x31\xB9\xB8\x80\x01\x37\x60\x64\x60\xF8\x76\x0D\x44\x32\x30\x5C\xD6\x0D\x2C\x61\xE5\xC7\xA3\x16\x1B\xE0\x2C\x02\x5A\x08\xA4\x3F\x00\xB1\x48\x3A\x98\xCD\xC8\x02\x62\x27\x41\xD8\x12\x20\x76\x79\x49\x41\x09\x90\xAD\x03\x62\x27\x17\x14\x81\xD8\x40\x17\x33\xF0\x14\x85\x04\x39\x03\xD9\x3E\x40\xB6\x42\x3A\x12\x3B\x09\x89\x9D\x92\x5A\x9C\x0C\x64\xE7\x00\xD9\xF1\x08\xBF\xE5\xCF\x67\x60\xB0\xF8\xC2\xC0\xC0\x3C\x11\x21\x96\x34\x8D\x81\x61\x7B\x3B\x03\x83\xC4\x1D\x84\x98\xCA\x42\x06\x06\xFE\x56\x06\x86\x6D\x97\x11\x62\x9F\xFD\xC1\xFE\x65\x14\x3B\x54\x92\x5A\x51\x02\x12\xF1\xD3\x77\x64\x28\x48\x2C\x4A\x04\x4B\x33\x83\x02\x34\x2D\x8D\x81\xE1\xD3\x72\x06\x06\xDE\x48\x06\x06\xE1\x0B\x0C\x0C\x5C\xD1\x10\x77\x80\x01\x6B\x31\x30\xA0\x49\x0C\x27\x42\x00\x00\x72\xD8\x36\x84\xA3\x1F\x47\xB3\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0E\xC3\x00\x00\x0E\xC3\x01\xC7\x6F\xA8\x64\x00\x00\x20\x00\x49\x44\x41\x54\x78\x9C\xED\x9D\x67\x73\x1C\x49\x9A\xDF\xFF\x4F\x55\x7B\x98\x86\xF7\x84\x07\xFD\x90\x43\x6F\xC6\x71\xDC\xCE\xDE\xDE\xCE\xC4\x69\x4F\xBB\xA1\x08\x85\xDE\xE8\x23\xDC\xDB\x0B\x7D\x80\x7B\x29\x29\x42\x11\x7A\x23\x17\xA7\x90\x6E\xE2\xEE\x76\xB5\xE6\x66\x67\x39\x9E\x1C\x0E\xBD\x01\x3D\x09\x10\x8E\xF0\xA6\xE1\x1A\x68\x57\xF9\xE8\x45\x82\x5C\x0E\x09\x53\xD9\xDD\xD5\x5D\xDD\xC8\x5F\x04\x82\x04\xD0\x59\x95\x85\xAA\x7F\x65\xE6\x93\x8F\xA1\xBF\xFB\xDB\xBF\x61\x68\x34\x9A\x82\xC6\xC8\x77\x07\x34\x1A\x4D\xE6\x68\x21\x6B\x34\x45\x80\x16\xB2\x46\x53\x04\x78\x54\x1B\x34\x06\x7D\xE8\x0E\x18\x68\xE6\x04\xCA\x92\x31\x27\xFA\xB4\xAD\x59\xF2\x06\x30\x4A\x3E\xF4\xC5\x04\xC6\x57\x13\xF9\xEE\xCE\x73\xFC\x5E\x13\xBB\x9B\xCA\xD0\x5A\xE1\x41\x4D\x20\x05\x40\x9B\x56\xB2\x89\xC5\x06\xA6\x56\x4D\x0C\xCE\x25\xF0\x60\x74\x51\xB9\xBD\x2D\x21\x37\x04\xBD\x78\x23\xC8\xA8\x8E\x2D\xC3\xBF\x3A\x0B\x68\xFD\x3A\x46\x00\x4B\xA8\x05\xF0\x3A\x80\x78\xA8\x04\xB3\x81\x52\x7C\xBF\x4A\x98\x58\x4D\xE6\xA5\x3F\x1F\xEE\xAF\x41\x7D\x50\xA0\x8C\xA2\x00\x56\xE5\x0F\xB5\x86\x1D\xA1\x23\x08\x74\x34\x03\x67\x5A\x82\x58\x10\x21\x8C\x2F\x01\xDF\x3C\x98\xB5\xD5\x76\xCB\xA9\x75\x43\xD0\x8B\x4F\x68\x09\x4D\x91\x49\xF8\x57\xA3\x19\x77\x56\x63\x1F\xFF\x6A\x14\x4D\x91\x49\x7C\x42\x4B\x68\x08\x7A\x73\x7E\xFE\x8F\x0F\xD6\xA0\x3B\xB4\xB4\x26\x62\x4D\xAE\x20\x16\xA8\xA0\x65\xEC\x29\x5F\xC6\x99\xDD\xD5\xB6\xDA\x6C\x2A\xE4\x67\x22\xD6\x02\xCE\x2F\xFE\xD5\x68\xCE\xC5\xFC\xF1\xC1\x1A\xB4\xF8\x97\x72\x76\x3E\xCD\xFA\xD8\x15\xF3\x86\x42\xD6\x22\x76\x17\xB9\x14\xB3\x16\xB1\xBB\xB0\x23\xE6\x0D\x85\xFC\x31\x2D\x6B\x11\xBB\x0C\xFF\x6A\x14\x1F\xD3\xB2\xA3\xE7\x38\xB3\xA7\x5A\x8B\xD8\x85\xEC\x29\x5F\xC6\xBE\x96\xF0\x86\xBF\x5F\x57\xC8\x75\x01\x2F\x02\xAB\xCE\x3E\x30\x9A\xF4\x08\xAC\x2E\xA3\x2E\xE0\xDC\xA8\xDC\x50\xE2\xD8\xA1\x35\x19\xD2\x56\xB5\xF1\x7D\x5F\x57\xC8\x3D\x41\xE5\x5D\x29\x4D\x0E\x71\xF2\xFE\x84\xCD\x55\xC7\x8E\xAD\xC9\x8C\xDA\x80\xB5\xE1\xEF\xD6\x15\x72\x0B\xDC\xB3\x7F\xA9\x79\x15\xA7\xEE\xCF\xAE\xA6\x72\x18\xBC\xF1\xC3\xA2\xC9\x2F\x21\xAC\xA0\x3C\xB4\xFE\xA8\xBC\xAE\x90\xAB\x56\x16\x1C\xED\x90\x26\x33\x9C\xBA\x3F\xED\xD5\x3E\x47\x8E\xAB\xC9\x1E\x3B\x1B\xCA\xD6\xFD\xF9\x2B\x42\x6E\x0D\xF9\xE0\x49\xC4\x1D\xEF\x90\x26\x7D\x3C\x89\x38\x5A\x43\xD9\x17\x5D\x5D\x50\x8F\xC6\x6E\xA7\x39\xBC\xBE\x7D\x5A\xFB\x5A\x6B\x34\x45\x80\x16\xB2\x46\x53\x04\x68\x21\x6B\x34\x45\x80\x16\xB2\x46\x53\x04\x68\x21\x6B\x34\x45\x80\x16\xB2\x46\x53\x04\x68\x21\x6B\x34\x45\x80\x16\xB2\x46\x53\x04\x38\xE0\xB4\x4B\x00\x01\x28\x29\x07\x35\xEC\x00\xCA\xC2\xA0\xD2\x30\x50\x16\x06\x82\x25\x40\x2A\x09\xC4\x57\x81\x78\x0C\x1C\x8F\x01\x0B\x73\xE0\xC9\xA7\x40\x64\x1A\x10\x62\x2D\xFB\x84\x1B\x53\x50\xAC\x5D\x57\x20\x08\x0A\x57\x03\xE1\x2A\xA0\xA2\x5A\xFE\xBF\x2C\xFC\xEA\x75\x2D\x2D\x00\x93\x4F\xC1\xB3\x93\x80\x58\x73\xB4\x70\xED\xB5\x15\x28\x44\xF2\x5F\xC3\x03\x0A\x84\x41\xA1\x4A\x50\xB0\x42\xFE\xEB\x2F\x05\x5B\x49\x20\x15\x03\x92\x71\x70\x72\x15\xBC\x3C\x05\xB1\x38\x01\x58\x6B\x2E\xAE\x5C\x3C\xF7\x22\xBB\x42\xAE\xAE\x07\x75\xEF\x03\x75\xED\x03\x35\xB5\x01\xA6\x89\xE7\x02\x78\xF6\xEF\xF3\xBF\x1D\xCB\x1F\x33\xCB\xAF\x78\x0C\x3C\x3D\x06\x1E\x7C\x04\xBE\x77\x0D\x98\xB7\x97\xE2\x24\x27\xF8\x03\xA0\xFD\xC7\x40\xAF\x9F\x06\x55\xD5\xC9\x07\x88\x08\xF2\x9A\x36\xBA\x2E\x00\x2C\x80\x44\x1C\x3C\x33\x01\x8C\x0E\x80\xEF\x5E\x03\x4F\x8D\xE6\xE9\x22\x8A\x08\xD3\x07\xB3\xF9\x00\x8C\xEA\x0E\x50\xB0\x12\xE4\x2F\x03\x0C\x03\x6B\x0F\xDA\x9F\xEF\xCD\x8B\x2F\x4D\x66\xF9\xBD\x10\xE0\x95\x59\x88\xC8\x30\xAC\xB1\xDB\xE0\xE5\xE9\xDC\xF7\xDF\x01\x32\x17\x32\x11\xA8\x73\x2F\xE8\xF8\xBB\xA0\xFA\x66\xC0\xE3\x05\x3C\x1E\xC0\x30\x37\xF8\xFC\x46\x3D\xF1\x80\x82\xDD\xA0\xE6\x0E\xE0\xD8\x19\xF0\xD3\x27\xE0\x3B\x57\xC0\x8F\x6F\xCB\x91\x3A\x1F\x54\xD7\xC3\x38\x70\x02\xB4\xE7\x10\x10\x2A\x93\xD7\x66\x6C\xB0\x1A\x59\xF7\xBA\x4C\x79\x5D\x2D\x1D\x40\x63\x2B\xE8\xF5\xD3\xE0\xA9\x31\xF0\xBD\x6B\xF2\x65\x15\xD7\xC9\xCF\x94\x30\x4C\x98\x0D\xFB\x60\xB6\x1E\x05\x05\x2B\xE5\x33\x46\xC6\x9F\x47\xE6\x57\xA0\x57\xFF\x6B\x00\x54\x56\x0F\xB3\xA4\x06\x46\xD3\x01\xF0\xFC\x53\x58\xA3\xB7\x20\xA6\x1F\x3B\xDD\x7B\x47\x49\x5F\xC8\x44\xA0\xD6\x6E\xD0\xB1\x33\xA0\xA6\x76\x20\x18\x02\xCC\x4C\xDE\x0B\x24\x6F\x8C\x61\x02\x5E\x1F\xA8\x6B\x2F\xA8\xA5\x13\xBC\xE7\x30\xC4\xF9\xCF\x80\x99\x89\x0C\x8E\xAD\x48\xA8\x14\xC6\x5B\x3F\x03\x75\xEF\x03\x02\x41\xC0\x17\xD8\xE4\x61\xD9\x8A\x97\xAE\xAB\xA5\x03\x54\xDB\x08\x7E\xED\x38\xF8\xFB\xCF\xC1\x4F\xEE\x17\xD5\x14\xCF\x11\x88\x60\xD4\xEE\x84\xB9\xE3\x08\xA8\xB4\x16\xE4\x0D\x48\x01\xA7\x7D\x3C\x03\x30\x0D\x90\xE9\x05\x55\x77\x80\xCA\x1B\x21\x6A\xBB\x61\xF5\x7D\x07\x4E\x14\x66\x32\x8D\xF4\x94\xE7\xF3\xC3\x78\xF3\xA7\xA0\xDD\xAF\x03\x25\xE5\x80\xD7\x81\xA8\x19\x8F\x17\xF0\x78\x41\xDD\xFB\x60\xD4\x34\x80\x6F\x9C\x07\x5F\x3B\x0F\xA7\xD7\x98\x54\xD7\x0C\x7A\xEF\x13\x50\x53\x07\x10\x08\x60\xE3\x29\x44\x9A\x98\x1E\x20\x54\x0A\xF2\x07\x41\x1F\xFD\x0A\xDC\x77\x17\xE2\xFB\xCF\x81\xA8\x7A\x0A\xD4\xED\x00\x95\xD5\xC3\xD3\xF9\x06\xA8\xBC\x01\xE4\x2B\xDD\x78\xA6\x97\x2E\x86\x07\xE4\x2F\x85\x59\xBF\x07\x54\x52\x03\xAB\xEF\x5B\x88\xC8\x70\x76\xCF\x91\x03\xD4\x85\x5C\x52\x06\xE3\x9D\x9F\x83\x76\x1E\x00\x42\xA5\x0E\x74\xE9\x25\x7C\x7E\x50\x6D\x23\xE8\xE4\x07\x10\x1E\x1F\xF8\xF2\xD7\x72\xED\x99\x75\x08\xB4\xEB\x00\xE8\xD4\x07\xA0\xBA\xB5\x25\x82\x93\x98\xA6\x34\x96\xED\x3B\x0A\xA3\xA4\x14\xE2\xEC\x3F\x03\xCB\x3A\x7C\xF4\x45\xA8\xBC\x11\x9E\x5D\x1F\xC0\x28\xAB\x07\x4C\x87\xEF\x87\xC7\x0F\x23\xDC\x04\xDA\xF9\x3E\x52\x0F\xCF\x42\xCC\x3F\x75\xF6\x7C\x59\x46\x79\x7E\x42\x87\xDF\x94\x23\x71\x2E\x44\xFC\xFC\xA4\x04\x84\xAB\x60\x1C\x7B\x07\x74\xEC\x9D\x8D\xD7\xA9\xE9\x62\x18\xA0\x63\xEF\x80\xDE\xFE\x4B\x50\x63\xAB\xF3\x22\x7E\x91\x60\x08\xD4\xB5\x0F\xC6\xFB\xFF\x0A\x28\xAB\xC8\xDD\x79\x5D\x0E\x95\xD5\xC3\xD3\xF3\x2E\x8C\x70\x93\xF3\x22\x7E\x7E\x52\x43\xAE\x9F\xBB\xCF\x80\xCA\x1B\x72\x73\xCE\x2C\xA1\xAE\x88\xE9\xF1\x0C\xD6\x8B\x19\x52\x5E\x09\xE3\xE8\xDB\xA0\xB6\x9E\xAC\x1E\x96\x3A\xF7\xCA\x97\x44\x6D\x63\x66\x6B\xAF\x74\xF1\xF9\x41\x3D\xFB\x61\xBC\xF1\xD1\x9A\xA5\x7F\x9B\xE3\xF1\xC3\xD3\x71\x0A\x46\xE5\x8E\xDC\xDF\x0F\x22\x18\x15\xCD\xF0\xB4\x9D\x00\x3C\x85\x93\x68\x41\xF9\xAF\xC4\x83\x0F\xC1\x77\xAE\xE6\xCF\x40\x53\x51\x03\x3A\x7A\x46\x1A\xD7\xB2\x41\x65\x0D\xE8\xE4\xFB\x40\x45\x4D\x76\x8E\x97\x2E\x3E\x3F\x68\xCF\x61\x50\xD7\xBE\xFC\xF6\xC3\x05\x98\xF5\xBB\x61\x54\x77\xE6\xE7\xA5\x0A\x00\x64\xC0\xA8\xE9\x82\x51\xD3\x9D\x9F\xF3\xA7\x81\xFA\x5F\x2A\xB6\x0A\xBE\x7E\x0E\x3C\x3E\xA4\xD6\x66\x6A\x14\x3C\x35\x06\x2C\xCD\x4B\xE7\x89\x0C\xA0\xB6\x1E\xD0\xCE\x83\x19\x1D\x03\x00\xE0\xF5\xC1\x38\xF2\xB6\xDC\x1E\x4A\x87\x44\xFC\xB9\x43\x0B\x4F\x3E\x05\x16\xE6\x80\xD8\x6A\xFA\x6B\xF8\x60\x08\x74\xEC\x0C\x50\x5A\x9E\x5E\xFB\x22\x80\x02\x65\x30\x5B\x0E\x01\x1E\xBF\x7A\x63\x91\x02\xC7\x97\xC1\xD1\x19\xF0\xE2\x38\x78\x25\x02\x24\x63\xE9\x0D\x3A\x1E\xBF\xEC\x87\x37\xA8\xDE\x36\x0F\xA4\x65\xB5\xE6\xE9\x09\xE0\xCA\x37\xA0\x0F\xFF\xF5\xFA\x6B\xE5\x54\x52\x8A\x76\x31\x02\x2C\x46\xC0\x8B\x11\x29\x60\x10\x38\x10\x04\xFC\x41\x50\x30\x04\xD4\xB7\x80\x76\x74\xA9\x5B\xBD\x7D\x7E\xD0\xFE\x63\x72\x2F\x36\x99\x7E\x22\x3A\x6A\x6E\x07\xED\x3B\xAA\x66\x09\x4D\x25\xC1\x13\x4F\x81\xB1\x41\xF0\xD2\xBC\x14\x6E\x6C\x05\x20\x02\xFB\x03\xF2\xDA\xFC\x41\xA0\xAE\x49\x5E\x9B\xA2\x2D\x81\x5A\x3A\x41\xED\x3B\xE5\xAC\x67\x1B\x42\x15\xAD\xA0\xB2\x7A\xA5\x36\x1C\x5F\x06\x47\x86\x21\x96\xA6\x80\x54\x0C\x9C\x8A\x03\x22\x05\x32\xFD\x80\x37\x00\x0A\x94\xC1\xA8\x5C\x3B\xAE\xC2\x28\x6F\x84\x9B\x60\x94\x37\x40\xCC\x0E\xA8\x5E\x46\xCE\x49\x73\xE3\x97\xC1\x8F\x6E\x83\x9B\xDA\x41\x47\xDE\xFE\xB1\xF1\x69\x69\x1E\xFC\xA8\x17\x3C\xF8\x08\x98\x9F\x05\x2F\xCC\xC9\x07\xFD\xE5\x23\x78\xBC\xD2\xFB\xAB\x6B\x2F\xD0\xBE\x53\x1A\x99\x14\xB6\x7A\xA8\xBE\x05\x54\x55\x27\x47\xC2\x74\x11\x02\x3C\x33\x01\x0A\x96\xD8\x32\xA0\xF1\xE4\x53\x60\xE0\x01\x78\xA4\x1F\xFC\x74\x00\xD8\x20\x81\x3F\x1B\x06\xA8\xBE\x05\xDC\xB6\x13\xD4\xB9\x1B\xD4\xB6\xD3\xBE\x5D\xC1\x34\x41\x3D\x07\xC0\xF7\x6E\xFC\xD9\xB5\x73\x1B\x61\xD6\x76\x29\x89\x8D\x97\xA7\x60\x8D\xDD\x86\x98\x1D\x00\x47\x67\xD6\x1F\x7D\x3D\x7E\x18\x55\xA3\x30\x6A\xBA\x60\x36\xEE\x03\x0C\x9B\x8F\xBD\xE1\x81\x51\xD5\x5E\xCC\x42\x06\x90\x4C\x40\x5C\xFD\x0E\x46\x63\x9B\x9C\x9A\xB2\x00\x4F\x8C\x80\xEF\xDF\x04\xDF\xBE\x04\x44\xB7\xA8\x56\x90\x4A\x82\x87\xFB\xC0\xE3\xC3\xA0\x89\x11\xD0\x3B\x1F\x03\x55\xB5\xF6\xCF\x1F\x08\x02\xAD\xDD\x40\x06\x42\xE6\x91\x7E\xE0\xC2\xE7\xC0\xEB\x6F\x80\x3A\xF7\x00\xFE\xC0\x06\x1F\x14\xE0\x91\x27\xE0\xEB\xE7\xC1\x8F\x7A\xB7\x5E\x1A\x08\x01\x1E\x1F\x06\x26\x46\x80\xF1\x21\xB9\x6F\x5C\xD7\x6C\xBB\x5F\xD4\xD2\x21\xA7\xD7\x8B\x11\x85\xAB\x29\x02\xBC\x41\x50\xB8\xC5\xFE\xE7\x93\x31\x58\xC3\x57\x61\x8D\xF5\x6E\x3E\x7D\x4E\xC5\x21\xA6\x1E\x82\x17\xC7\x40\x1E\x3F\x8C\xBA\x5D\xB6\x5F\xAC\x46\x55\x9B\x7C\xB1\x38\xB2\xE5\x99\x3D\x32\xB3\x26\x44\xA6\xC1\x97\xBE\x04\xE6\xA6\xC1\xFD\xF7\xC1\x17\xCE\x82\x2F\x7F\xB5\xB5\x88\x5F\x24\x99\x00\x3F\xB8\x09\x71\xF3\x82\xF2\x34\x39\xED\xB5\xED\x33\x98\xC1\x03\x0F\x21\xBE\xFD\x3D\xF8\xEE\x95\xB5\xE9\xFF\xCB\x9F\x11\xD2\xFF\xFB\xFC\x67\xE0\x7B\xD7\xD5\xD6\xF7\xCC\xE0\xA1\xC7\xE0\xAB\xDF\xC9\x80\x0A\xBB\x94\x85\xA5\x05\x7D\x9B\x41\xC1\x30\xC8\x6F\xBF\xD4\x85\x98\x1F\x81\x35\x71\xCF\xF6\x1A\x98\x63\x4B\x48\x0D\x5C\x00\xC7\xEC\x3B\xDF\x50\xA8\x12\x94\xCE\x7A\x3D\xC7\x64\x6C\x16\xE4\xC7\xB7\x21\xAE\x7C\x0D\xF1\xE5\x3F\x83\x1F\xDE\x4A\xCF\x2F\x9A\x19\xDC\x7B\x11\x3C\x31\xA2\xD6\xAE\xBC\x4A\xFD\x5C\xEB\x31\x37\x05\xF1\xD5\xFF\x83\xB8\x76\x0E\x3C\x3D\xFE\xC2\xDB\x97\xC1\xD3\xE3\xE0\xAF\x7F\x2B\x97\x0A\x69\x7A\x95\xF1\x9D\x2B\xD2\xAE\x60\x1B\x52\x9B\x9D\x14\x09\xE4\x2B\x01\xC8\xBE\xBD\x42\x4C\x3D\x02\x2C\x35\xC3\x29\x2F\x4D\x42\xCC\x0D\xDA\x6F\x60\x78\x00\x5F\x96\x76\x48\x1C\x24\x73\xFB\xBE\x10\xE0\x6B\xE7\x80\xD9\xA9\xCC\x8E\xB3\xB2\x0C\x7E\x70\x53\xA9\x09\x05\x4B\xB2\xB7\x45\x91\x88\xCB\x19\xC5\xF9\xCF\xC0\x63\x43\x72\xE4\x5D\x89\x82\x2F\x7E\xA9\xFE\x82\x79\x99\x54\x52\x79\x09\x40\xA1\xF5\x13\x91\x17\x33\xE4\x0B\xD9\xB7\x25\xB0\x00\xAF\xCC\xA5\x75\x1E\x5E\x56\x78\x56\xC9\x90\xFD\x72\x39\xEE\x2A\xF2\xA4\xFA\x32\xF0\xF9\xE4\x57\xD6\xA2\x88\x18\x7C\xFF\x86\xEC\xC7\x3B\x3F\x97\xC6\xBA\xBB\xD7\xB2\x73\xE4\xD9\x09\x35\xAF\xED\x92\xED\x27\x64\x98\x0A\xBB\x17\x2C\xC0\xC9\xF4\xEA\x54\x71\x4C\xA5\xDA\x24\x01\x46\xEE\x8B\xCC\xAB\xE2\x2A\x21\xF3\xFC\xB4\x5C\xEF\xD8\xF6\x1C\x23\x47\x9C\x06\x78\x6A\x14\xFC\xDB\xFF\xB5\xF6\x4D\x96\x8C\x1C\x4B\x8A\x7E\xD4\x5E\xF7\xAF\xCB\xB2\x8D\x92\x30\xC9\x04\x85\x2A\xC1\x51\xF5\xB8\x75\x0A\x28\xBC\x24\x59\x80\x93\xAF\xEE\xBA\xB8\x0D\x77\xA5\xFA\x89\x2E\xAB\x19\xBC\xE2\x31\x35\x23\x92\x0A\xF1\xD5\xEC\x1E\x3B\xA8\x58\xAF\x74\x3B\x96\xB5\x5D\x5D\xB0\xBF\xE5\x46\x04\x43\xC5\xC2\xFD\x62\xD3\xD2\x3A\xDB\x9F\x65\x2B\x91\xF6\x14\x3E\x97\xB8\x4B\xC8\x1E\x8F\xFC\xB2\x09\x2F\x2F\x14\x4C\x2C\x2F\x29\x06\x44\xF0\xE2\x3A\x16\xF4\x22\x87\x63\x0B\x4A\xC6\x2B\xA3\xA6\x53\xDD\x1F\xDA\xF4\xC2\xA8\x50\x78\x01\xC4\x16\x81\x94\xFB\xAB\x93\xBA\x4A\xC8\x54\x55\xA7\xE6\x65\xB5\xDE\x76\x91\x5B\x09\x2B\x5A\xD8\x0B\xE9\xDA\xB2\x04\x27\xA2\x4A\x81\xFD\x54\x56\x0F\x4F\xDB\x49\xA5\x73\xC8\xB8\xE3\x6A\xDB\x9F\x17\x4B\x19\x1A\x71\x73\x84\xAB\x84\x8C\x1A\xB5\xD0\x31\x8E\x14\x48\xBE\x25\x9F\x5F\x7A\xB1\xD9\x85\x19\x98\x2B\x8C\x07\x28\xAB\x30\xC3\x1A\xBF\xA3\xD4\xC4\x6C\x3B\x26\x9D\x36\xEC\x60\x78\x60\xB6\x1E\xB3\x7F\x70\x91\x82\x18\xEB\x55\xEA\x4F\xBE\x70\x8F\x90\x4D\x53\x7A\x57\xD9\x25\x99\x00\xFA\xEE\x3A\xD7\x9F\x2C\x42\x0D\x3B\x80\x4A\x85\x7D\xE1\xD9\x49\xF0\x76\x14\x32\x00\x31\x71\x0F\x9C\x50\x30\x2E\x99\x3E\x78\x76\x7D\xB8\x75\xFC\x30\x11\xCC\xB6\x63\xA0\x52\xFB\x51\x6E\x62\x6E\x10\x62\xA1\x30\x92\x25\xBA\x46\xC8\x74\xE0\x24\xA8\x63\xB7\xED\xCF\xF3\xD3\x27\x32\x30\xA3\x00\xA0\xAE\xBD\x4A\x71\xC6\x3C\xF8\x08\x88\x6F\xCF\x1A\xD5\x1C\x5B\x84\x98\x7E\xA4\xD4\x86\x4A\xAA\xE1\xDD\xF7\x31\x8C\x9A\xAE\x0D\x3F\x63\xD4\xF6\xC0\x6C\x3D\x6E\x7F\x97\x43\xA4\x60\x8D\x5C\x2F\x18\x7F\x77\x57\x08\x99\xDA\x7A\x60\x9C\xFC\x00\xF0\xD9\xDD\x72\x61\xB9\xBF\x6B\xA5\x1C\xED\x57\x56\x08\x84\x00\xC5\x18\x63\xEE\xBF\x8B\x6D\x9B\xFF\x9A\x05\xAC\xD1\x5B\x6A\x49\xF0\xC8\x00\x95\x54\xC3\xB3\xF3\x7D\x19\x7A\xF8\x52\x50\x84\x51\xD9\x0A\x4F\xD7\xDB\x4A\x8E\x1D\x62\x6E\x08\x22\x92\xA1\x23\x50\x0E\xC9\xEB\x3E\x32\x35\xB6\x82\xF6\x1E\x01\x3A\x76\x01\x15\xF6\x0D\x10\x3C\x36\x2C\xB3\x4F\x16\x00\xB4\xEB\x00\xA8\xDA\xFE\x76\x07\xE6\x67\x65\xC0\xC5\x36\x86\x97\xA6\x60\x0D\x5E\x84\xA7\xE7\x5D\xFB\x23\x28\x11\xA8\xA4\x1A\x66\xFB\x29\x18\xD5\x1D\xB0\xC6\xEF\x80\x23\x23\x30\x9A\x0E\xC0\x6C\xDC\xA7\x64\xE0\xE2\xD5\x05\x58\x03\x17\xFE\x9C\xC8\xBE\x00\x70\x5E\xC8\xE5\x95\xA0\x92\x72\xB9\xAD\x14\x2C\x91\xF1\xB9\xC1\x12\x50\x79\x05\x50\xBF\x03\x54\x55\x0B\x84\x4A\x60\x3B\x84\x71\x79\x11\x7C\xEE\x33\xB5\xC0\x8C\x7C\xE1\x0F\x80\x0E\x9E\x56\x48\x13\xCC\x32\xC6\x7A\xD5\xFD\x0E\x08\x8E\x22\x52\x10\xE3\x77\x61\x95\xD5\xC3\x6C\xDC\xAF\xD4\xF4\x59\xE0\x05\x85\xAA\xC0\xF1\x25\x50\x49\x0D\x28\xA0\x90\xA8\x21\x15\x87\xF5\xE4\x3C\xC4\xE2\xB8\x62\xA7\xF3\x8B\xE3\x42\xA6\x9D\x07\x40\xBB\x0E\xCA\x78\x5F\xAF\x0F\xE4\xF5\xC9\x44\x02\x6B\x41\xF8\x4A\xA4\x92\x10\x17\xBF\x00\x0F\x3D\x72\x7D\x58\x19\x00\x59\x75\xA3\x41\x61\xCF\x32\xBA\x04\x71\xE7\x4A\x41\x5C\x9B\xD3\x70\x22\x0A\x6B\xE8\x32\x8C\x92\x6A\x50\xB9\x62\x24\x98\xE1\x91\xF9\xAF\x4B\x15\x03\x4F\x98\x61\x8D\x5C\x83\x35\xF5\xA8\x60\xD6\xC6\xCF\x70\x5E\xC8\x55\xB5\xD9\x49\x96\x97\x4C\x80\x6F\x7C\x0F\xBE\x73\x25\xE3\x54\x41\x39\xA1\xA4\x0C\x74\xF8\x2D\x85\x8C\x9C\x2C\xA3\xC7\x32\x0D\x3E\x29\x22\x78\x79\x0A\xA9\xFE\x73\x30\xDB\x4E\xC0\xA8\x6C\x75\x36\xE9\xA3\x48\xC1\x1A\xBF\x0B\x6B\xF4\xA6\xAC\x17\x55\x60\xB8\xCA\xD7\x7A\x43\x16\xE6\x20\x7A\x2F\x82\x6F\x5F\x01\x56\x0A\xC0\x75\x91\x0C\xD0\xFE\xE3\x6A\x7B\xC7\x2B\x51\xF0\xAD\x8B\x7A\x34\x7E\x11\x66\x88\xD9\x27\x80\x48\x01\xC9\x15\x18\xB5\x3B\xB3\x9F\xA0\x1E\x6B\x96\xF2\xF1\x3B\xB0\xC6\xEF\x82\x57\x0B\x33\xB7\xB8\xBB\x85\xCC\x0C\x1E\x1D\x04\xDF\xB9\x0C\xBE\x7F\xBD\x60\xD6\x8E\xD4\xD0\x02\xE3\xD0\x1B\x6A\x6B\xE3\xC7\x77\xC0\x93\x85\xB1\x67\x99\x53\x98\x21\xE6\x86\x00\x61\x81\xCA\xEA\x41\xA1\x2C\xC5\xA0\x3F\x3B\xFC\xEA\x02\xAC\xA1\x4B\x10\x93\xF7\xD5\xF6\xAF\x5D\x86\xEB\x85\x8C\xC9\x11\x69\x00\x8A\x39\x14\x1C\x91\x6D\xFC\x41\xD0\x91\xB7\xD4\x12\x03\x44\x66\xC1\x37\xCE\x17\xDC\xBA\x2C\x57\x90\xBF\x14\x54\xA6\x60\xF9\x57\x81\x2D\x99\xBC\x4F\x14\xC0\x56\xE6\x26\xB8\x62\x1F\x79\x43\x88\x80\x86\x1D\xA0\xFD\xC7\xA4\xFB\x66\xBE\x12\xE3\xDB\x85\x48\x16\x9F\xDB\xF5\xBA\xFD\x36\x56\x0A\xE2\xF6\xE5\x6D\xBF\xE5\xB4\x2E\x44\xA0\xB2\x3A\x98\x2D\x87\x61\x76\xBE\x95\xF5\xD1\x18\x00\x28\x54\x05\x4F\xE7\x1B\x30\x9B\x0E\x28\x6D\x51\xB9\x0D\x77\x8F\xC8\x44\xA0\xE6\x0E\x50\x6D\x13\xF8\xC1\x0D\xF0\xBD\x1B\xE0\xF1\x41\xF7\x4E\xB1\xAB\xEB\x41\x27\xDE\xDD\x38\x89\xDF\x3A\xF0\xF8\x08\xF8\xD6\x0F\x05\x13\xC5\x95\x33\x88\x60\x54\xB4\xC0\x6C\x39\x0C\xA3\x7E\xB7\xA3\xC9\xEA\xA9\xAC\x1E\x9E\xEE\x33\xB0\x4A\xEB\x20\xC6\x7A\xA5\x5B\x66\x81\xDD\x0F\x77\x8F\xC8\xCF\xF0\xF9\x41\x07\x4E\xC2\xF8\xE8\x97\xA0\x3D\x87\xD5\xB7\xAD\x72\x81\x3F\x28\x93\xDD\x37\x2A\x18\xB8\x62\xAB\xE0\xAB\xDF\x6E\xCB\x48\xA7\xAD\xA0\xD2\x3A\x98\x3D\xEF\xC2\x68\xD8\xAB\x26\x62\x66\x69\x1C\x53\xC5\xF4\xC2\x6C\x3E\x08\xB3\xE7\x5D\xE5\xBC\xDA\x6E\xC0\x79\x21\x27\x13\x72\x04\x8D\xAD\xC8\x6D\xA3\x4C\xDE\x74\x95\x35\x30\xCE\x7C\x02\xEA\x79\xCD\x99\x52\xAE\xE9\x42\x86\x9C\x52\x1F\x38\x61\xBF\x0D\x33\xF8\xC9\x3D\x99\x5E\x57\xF3\x23\x28\x50\x06\x4F\xC7\x69\x18\x61\xFB\x29\x84\x01\xC8\xB4\xB7\x0B\xA3\x10\x33\x4F\xC0\xF1\xA5\xB4\x9E\x35\xA3\xA2\x05\x9E\xCE\xB7\x40\xA1\x4A\xE5\xB6\xF9\xC4\xF1\xA9\x35\x8F\x0F\xCB\xE0\x6F\xD3\x90\xD5\x06\xCB\x2A\xA4\x53\x88\xE9\x91\x62\x0C\x95\xAA\xAD\x7D\x03\x41\x18\xEF\xFF\x15\xC4\x6A\x14\x3C\xF8\x00\xB0\x5C\x60\x20\xAA\xAC\x86\xF1\xE6\x4F\xD5\x5E\x2E\x8B\x11\xF0\x85\xB3\x85\xB1\x27\x9E\x4B\x3C\x7E\x98\x3B\x8E\xCA\xDC\xD3\x76\x61\x06\x27\xA2\x10\xB3\x4F\x60\x3D\xB9\x00\x8E\x2F\xC1\x6C\x39\x04\xB3\xF9\x75\x50\x30\xAC\x5C\xCD\xD1\xA8\xED\x86\x99\x88\xC2\xEA\xFB\xB6\x60\x0A\x9F\x3B\x2F\xE4\x07\x37\x7F\x9C\x1D\x93\x0C\xA0\xBC\x02\x14\xAE\x02\x9A\xDA\x61\x1C\x38\x01\x94\x57\xCA\x24\x7A\x76\xDD\x34\x4B\xCA\x60\x7C\xF4\x4B\x88\x5F\xFF\x77\xB5\x1A\x54\x4E\xE0\xF5\xC9\x2A\x8A\x2A\xB1\xD4\xA9\x24\xC4\xA5\x2F\xC1\x53\x7A\xBB\xE9\x47\x10\xC1\xAC\xDB\x05\xB3\xF5\xA8\x42\x36\x4D\x06\xAF\xCC\xC1\x1A\xBC\x28\x63\x99\xD7\xF6\xE1\xAD\xE1\x2B\x10\x73\x83\x32\x58\xA2\x72\x07\xC8\x13\x50\x1A\x30\xCC\xA6\x03\x40\x62\x05\xA9\x81\xEF\x95\x53\xEE\xE6\x83\xDC\xAF\x91\x59\xC8\xC2\x67\xC3\x7D\xE0\x8B\x5F\xC0\xFA\xBF\xFF\x05\x7C\xFB\x32\xB0\x12\x55\x73\x86\xA8\xA8\x06\xBD\xFF\x57\x0A\x7B\xB5\x0E\x40\x04\xDA\x75\x10\xB4\x4F\x21\x58\x1D\x2C\xAF\xFD\xC6\x05\xC7\xBA\x55\xA8\x50\xA0\x02\x66\xCF\xBB\xF6\x4B\xBA\x30\x83\x57\x23\x48\xF6\xFE\x66\xAD\xDA\xC4\x8F\x9F\x1F\x5E\x9E\x46\xB2\xF7\xD7\xB0\xFA\xBF\x03\x27\x96\xD5\xA6\xDA\x44\x30\xDB\x8E\x17\x4C\x45\xC6\xFC\x1B\xBB\x16\x23\x10\x9F\x7F\x0A\xF1\xE9\x7F\x05\x22\x33\x4A\x4D\xA9\xB9\x43\x16\x4A\xCB\x17\xE1\x2A\x59\xA0\x5C\xA5\xF0\xFA\x4A\x14\xE2\xEC\x3F\x16\x46\x08\x66\x8E\x31\x9B\x0F\x2A\x85\x1A\x72\x72\x05\xC9\xDB\xBF\xDD\x3C\x4F\x35\x0B\x58\x23\xD7\x91\xBA\xF3\x3B\xF5\x69\xB2\x61\xC2\xD3\x79\x3A\x77\x85\xD6\x33\x20\xFF\x42\x5E\x83\xC7\x86\x20\xFE\xF8\x0F\x6A\x0F\xB8\x69\x82\x0E\xBD\xE1\x5C\xA7\xB6\x38\xB7\xF1\xE1\x5F\xAB\xE5\x9F\x66\x86\xF8\xFE\x8F\xC0\x6C\x81\xA4\x28\xCA\x25\x9E\x00\x8C\xA6\xD7\xEC\x7F\x3E\x15\x47\xAA\xF7\x37\x60\x9B\x51\x4A\x62\x6E\x08\xC9\x9B\xFF\xA8\x98\xD3\x1A\xA0\x92\x5A\x98\x4D\x59\x28\xE1\xEB\x30\xAE\x11\xB2\x9C\x72\xF6\x43\x5C\xF8\x13\x54\x82\xEA\xA9\x73\x37\x50\x9D\xFB\xED\x02\x7A\xFD\xB4\xCC\xFC\xA1\x00\x0F\xDC\x07\xDF\xFC\x01\xDB\x36\x69\xC0\x26\x98\xCD\x07\x64\xC9\x18\x9B\x58\x4F\x6F\x40\xCC\xAB\x55\xEF\xE0\xA5\x09\x24\x6F\x7C\xAA\x96\x0B\x9B\x08\x66\xFB\x09\xD7\x57\x9B\x70\x91\x90\x01\x08\x0B\x7C\xE5\x5B\xF0\x50\x9F\xFD\x36\xFE\x80\xDC\x5B\xCE\x21\x54\xDF\x02\xE3\xD4\x87\x6A\x0E\xFC\xD1\x25\xF0\x37\xBF\xCF\xA8\x9E\x73\xD1\xE2\xF1\xC9\xCC\x1E\x36\x8D\x51\x9C\x88\xC2\x7A\x7A\x43\x3D\xC0\x84\x19\x1C\x9D\x41\xEA\xC1\xE7\x4A\x29\x6E\xC9\x5F\xA6\x96\xB4\x2F\x0F\xB8\x4B\xC8\x00\x10\x5B\x01\x2B\x25\xD5\x23\x50\x6D\x03\x54\x6A\x2B\x67\x84\xCF\x0F\x7A\xE7\xE7\x72\x2B\xCD\x2E\x2C\x64\x1C\xF5\x74\x61\xE4\x18\xCB\x35\x14\xAC\x04\x05\xED\xFF\x3D\xC5\xF8\x1D\xA5\x8A\x8A\x3F\x82\x05\xC4\xFC\xA8\x0C\x57\xB4\x0B\x11\x8C\x86\x3D\x6A\x25\x6D\x72\x8C\xFB\x84\x0C\xC8\x82\x67\x2A\x55\x1D\xC3\xD5\x39\xF3\xC3\xA6\x23\x6F\xCB\xF8\x6A\x85\xF3\x71\xFF\x7D\x19\x47\xED\x86\x3D\x6F\x17\x42\xA1\x2A\x85\xA4\x78\x16\xC4\x74\x5F\x66\xE1\x9E\x22\x05\x6B\xE4\x1A\x58\x21\x67\x35\x05\xC2\x6A\xA5\x66\x72\x8C\x2B\x85\xCC\x33\x13\x40\xD2\x7E\x16\x49\x2A\xAF\xCC\x89\x90\x69\x47\x97\x0C\x4F\x54\x71\xFC\x58\x5E\x04\xFF\x70\x56\x96\xC3\xD1\xAC\x8B\x8A\x17\x15\x5B\x09\xF0\x6A\xE6\x2E\xAD\x1C\x5B\x90\xB5\x95\xED\x42\x06\xA8\xC4\x7E\x2A\xDD\x5C\xE3\x4A\x21\x63\x65\x59\xAD\xE8\x59\x20\x28\xBF\x9C\x24\x54\x0A\x3A\xFD\x13\xB5\x8A\x11\xCC\x10\x57\xBE\x59\x8B\x6C\xD2\x06\xAE\x8D\x50\x72\x87\x4C\xAC\x64\x27\x6E\x98\x19\x3C\x3F\xA2\x34\xB2\x1B\x2E\xF6\xC1\x76\xA7\x90\x55\xE3\x72\x0D\x53\xBA\x7A\x3A\x05\x11\xE8\xF0\x5B\xA0\xD6\x6E\xB5\x29\xF5\xC0\x83\xC2\x49\x4D\x94\x47\xC8\x6F\x7F\xCA\xCA\xC9\xD5\xF4\x82\x22\xD6\x3B\xD6\x4A\x44\xE9\xA5\xE0\x44\x18\x65\xB6\x70\xA7\x90\x7D\x7E\x99\x0F\x5A\x05\x95\x35\xB5\x22\xD4\xBE\x13\xC6\xC1\x93\xEA\x53\xEA\x4B\x5F\xAA\x97\x53\xDD\x8E\x28\xBC\x1C\xC9\xF0\x64\x2D\xA4\x91\x53\x31\x40\xA5\x94\xAB\x8A\xE3\x4F\x8E\x71\x67\xCF\xCA\xC2\x4A\x31\xBD\x60\x96\xD1\x55\x4E\x50\x5E\x09\x3A\xF9\x01\x10\x56\x98\xFE\x09\x0B\x7C\xF3\x02\x78\xB8\x0F\x7A\x4A\x6D\x83\xA4\x42\xB2\x3B\x7F\x29\xC8\x9B\xA5\x65\x94\xE1\x55\x72\xF1\x4D\xB7\xB0\x7A\x2E\x70\xA5\x90\xA9\xA2\x46\xA9\xBC\x2A\x92\x71\x59\x2B\x39\xDB\x78\xBC\x30\x0E\x9E\x5A\xCB\x02\xAA\x30\xA5\x1E\xEE\x87\xB8\x79\x41\x5B\xA9\x6D\xC2\x0A\x42\x26\x6F\x00\x50\xC9\x53\xBD\xD9\xB1\x02\x65\x4A\x4E\x28\x48\x14\xAB\x90\xBD\x3E\xA5\x0A\x11\xF6\x20\xE9\x3F\xAD\x32\x7D\x8A\x2E\x39\x90\x7D\x92\x40\x6D\x3D\xA0\x43\xA7\xD5\x1C\x3F\x96\x17\xC0\x57\xBE\x06\x16\x23\x59\xEE\x4F\x11\x93\x54\x98\x4D\x19\x1E\x18\x95\x3B\xB2\x72\x5A\x2A\xAD\x53\xDA\x1B\x76\x73\x48\x63\xFA\x42\x26\x02\xB5\xEF\x84\x71\xEC\x0C\xA8\xB9\x23\x7B\x69\x4A\x6B\xEA\x81\x1E\x05\x9F\x5B\xAC\x6D\x57\x65\x3B\x35\x4B\x45\x15\xE8\xF8\x7B\x40\x69\xD8\x7E\x1B\xCB\x02\xDF\xBD\x0A\xEE\x2F\x8C\x72\x36\x6E\x41\x75\x3B\xC9\xAC\xDF\x93\x71\xE0\x3F\xF9\x42\x30\x6B\x15\xF2\xAD\xAF\x85\x4B\xBA\x95\xF4\x85\x1C\xAE\x02\x9D\xFC\x00\x74\xEC\x1D\xD0\xDB\x3F\x03\x75\xED\xC9\x7C\x0B\xC8\xE7\x97\x2F\x86\x5A\x85\xD8\x5E\x66\x59\xBD\x30\x9B\x42\xF6\xFA\xE4\x94\xBA\x5D\x2D\xB1\x3E\x8F\x0F\x41\x5C\xFD\x4E\x67\xC3\x54\x44\x2C\x8C\x29\xFD\xCD\xA8\xBC\x11\x66\xF3\xEB\xF6\xC3\x1D\x5F\xC6\xF0\xC0\x68\xD8\x07\xA3\xCE\xFE\xFD\xE5\xE4\x2A\x78\x69\x32\xBD\xF3\xE5\x80\xF4\x84\xEC\xF1\xC2\x38\x70\x12\xB4\xA3\x13\x00\x81\x3A\x76\xC3\xF8\xC9\x5A\x3E\xAD\xF2\x4A\xA8\xBB\x4B\x12\x50\x5A\x0E\xEA\x79\x4D\x66\xCC\x54\x69\x9F\x88\xC9\x12\x32\x59\x83\x40\xAD\x3D\xA0\xC3\x6F\xAA\x4D\xEF\x57\x96\xC1\x97\xBE\x02\x16\xDC\xFB\xD6\x76\x2B\xBC\x12\x01\xC7\x14\xAC\xFB\x44\x30\x9B\x0F\xC2\xA8\xE9\x54\x0F\x66\xF0\x06\x60\x54\xB5\xC3\x6C\x3F\xA9\xF4\x22\xE0\x85\x31\x57\xE7\xBD\x4E\xE3\x95\x46\xA0\xE6\x76\xF9\xA0\xBF\x28\xB8\x70\x15\x8C\x0F\xFF\x1A\x5C\x5D\x0F\xEE\xBD\x04\x8E\xAD\x00\x89\x18\x90\x88\x6F\xB2\x35\x44\x40\x20\x08\x0A\x57\xC9\xAA\x85\xAF\x2B\x7A\x4D\x01\xB2\x46\xF2\x6C\x16\xDF\x94\xE1\x4A\xD0\x9B\x1F\xC9\x82\x73\x2A\xFD\x98\x18\x91\xF1\xD4\x4E\x45\x62\xC5\x56\x0A\xA3\x70\x5D\x3A\x88\x14\xC4\xDC\x20\x4C\x95\x7D\x5A\x6F\x10\x9E\x3D\x3F\x85\x35\x78\x09\x62\xFA\xB1\x7C\x11\x6C\x36\xAA\x9B\x5E\x50\xA0\x1C\x46\x65\x2B\xCC\xB6\xE3\x20\xBF\x82\xDF\xC1\xB3\x8A\x17\x2E\xAE\x02\xA2\x2E\xE4\x50\x09\xE8\x8D\x9F\xAE\xEF\x80\xE1\xF1\x82\x8E\xBF\x0B\xB4\xEF\x04\x3D\x1D\x90\xA9\x6C\xA6\x46\xC1\xD1\x65\xE9\x14\x61\xA5\xE4\x5A\xDA\x94\x5F\xE4\xF1\x02\x3B\xBA\x61\x1C\x7D\x3B\x3D\x01\xA4\x92\x32\xBB\x48\xB6\xA6\xD5\x1E\x2F\x8C\xA3\xEF\x80\x9A\xDB\xD5\xDB\x96\x55\x80\x3E\xFA\xA5\x63\xA1\x1B\x7C\xEF\x3A\xF8\xDA\x77\x0E\x1D\x3D\xFF\x88\xA9\xC7\x30\x1B\x5F\x53\x0A\xE2\x27\x5F\x09\x3C\x3B\xDF\x83\xA8\x6A\x83\x35\x7C\x45\x06\x52\x88\xD4\x5A\x4C\x3B\x03\x64\xCA\xE7\xCD\x30\x41\xA5\xB5\x30\x77\x1C\x91\x35\xA4\x14\xE1\xF8\x12\xC4\x8C\x42\x44\x5E\x1E\x50\x13\xB2\x61\x80\x9E\x6F\xC7\x6C\x0C\xD5\x35\x03\x75\xCD\xF2\xA1\x66\x96\x35\x7F\x27\x46\x64\xDA\xD7\xD2\x72\xF9\xD0\x87\xAB\xE4\xFF\xD3\x36\x92\xAD\x95\x93\xB9\x7B\x35\xCD\xF6\x2F\x77\x9A\x40\x6D\x3B\x65\x95\x88\x34\xE4\x48\xB5\x8A\x15\x03\x55\x19\x1B\x2A\xEA\x1D\x69\x31\x37\x00\x31\x3F\x02\xA3\xBA\x53\xB9\xAD\x51\xD3\x05\xA3\xA6\x0B\x9C\x58\x01\xAF\xCC\x49\xA3\x54\x2A\x0E\x0A\x94\x83\x02\x61\x20\x18\x4E\x7F\xEF\x99\x05\xAC\xA7\x37\x5C\x5F\x13\x4A\x49\xC8\x54\xD3\x08\xE3\xE4\x07\x6A\x01\x0A\x44\x40\x65\x0D\xA8\x32\xCB\x0E\xE7\xF1\x38\xF8\xFB\xCF\xB3\x17\xDF\x5B\x52\x06\xE3\x83\x5F\x28\x54\x4F\xD4\x64\x15\x66\x58\x83\x97\x60\x54\xEC\x48\x3B\xB5\x0E\xF9\x42\x72\xCD\x5C\xA1\x50\xCA\x76\xAB\x6E\xAD\x44\x60\x8D\x5C\xCF\xDA\xF1\x9C\xC2\xBE\x35\xC7\x30\x40\x1F\xFC\x02\x08\xBA\x20\x53\x02\x0B\x59\x62\x75\x30\x4B\x46\x2E\xC3\x80\xF1\xF6\x5F\x02\xD5\x0E\xD5\x17\xD2\xD8\x42\xCC\x0D\x42\x4C\x67\xD3\x70\x99\x21\x56\x12\xA9\xBE\x6F\x0B\xA2\xCC\xAA\x6D\x21\xD3\xC1\x53\x32\x68\xC0\x05\xF0\xD5\x73\x10\xDF\xFD\x01\xD9\x72\x7F\xA4\x9D\x07\xD4\x92\xCB\x6B\x1C\x23\xF5\xE0\x2C\x44\xC4\x05\x75\xB0\x84\x85\xD4\xE3\xAF\xDC\xF5\x62\xD9\x04\xDB\x42\xE6\xC7\xB7\xC1\x7D\x77\x90\x6F\xDF\x61\xBE\x76\x0E\xE2\xDC\x1F\xB2\x17\x51\x14\xAE\x82\xF1\xEE\x27\x8E\xD4\xDD\xD5\xA8\xC3\xC9\x55\xA4\xEE\x7D\x06\x5E\xCE\x63\x82\x42\x66\xA4\x06\xBE\x87\x35\xDA\x5B\x30\x35\xA0\xEC\x4F\xAD\xA3\x4B\x10\x9F\xFD\x03\xC4\xD7\xBF\x73\xC6\xAF\xD9\xCE\xF9\xBF\xF8\x67\x88\x73\xFF\x02\xC4\xB2\x74\x7E\xC3\x84\xF1\xCE\x5F\x3A\xE0\x66\xAA\xC9\x04\x5E\x8D\x20\x79\xE7\x77\x72\xCB\x27\xD7\xE7\x4E\x44\x91\x7A\xF0\x39\xAC\xE1\x6B\x59\x0B\x97\xCC\x05\x0A\x3B\xE2\x0C\x44\x17\xC1\x37\x2F\x40\xCC\x4C\x80\x4E\xBC\xB7\xE6\x13\xED\x70\x66\x0E\x16\xE0\x47\xB7\xC1\x97\xBE\x92\xAE\x98\xD9\x8C\x72\xF2\xFB\xA5\x7B\xA9\x83\x95\xFE\x34\x69\xC0\x0C\x5E\x9E\x46\xEA\xFE\xE7\x30\x1A\xF7\xC1\xD3\x76\x02\xF0\xF8\x1D\x3F\xAD\x98\xE9\x87\x35\x70\x01\x62\x79\x1A\x48\xD9\xCF\x50\xE3\x06\xD4\xF7\x91\x57\xA3\xE0\xC1\x87\xE0\xC8\x34\xA8\xB1\x15\xB4\xEF\x08\xA8\x7D\x57\xF6\xA7\xA6\xF1\x55\xF0\xE0\x23\xF0\xE3\x3B\xE0\xA7\xFD\xC0\xFC\x5C\xF6\x5D\x1F\xC9\xD0\x56\x6A\xB7\xC2\x02\xBC\x3A\x0F\xF1\xF4\x06\x92\x4B\x53\x30\xEA\x76\xC1\xA8\xED\xCE\x5E\x08\xE3\x33\x84\x05\x31\x3F\x02\x31\xF5\x10\x62\x6E\x08\xBC\x12\x71\xB5\xE3\xC7\x46\xA4\xE7\xAC\x9A\x4C\x00\x33\x13\xE0\xC5\x08\x30\x39\x0A\xAE\x6F\x06\xB5\xF6\x00\xF5\xCD\xA0\x9A\x86\x34\xC5\xC1\xC0\x4A\x14\x3C\x37\x05\x3C\x7D\x22\x63\x79\x17\xE6\xE4\x39\xF2\x31\x95\xD7\xB8\x02\x4E\xAC\x80\x67\x07\xC0\xD1\x59\x88\x89\x7B\x30\xAA\x5A\x41\x95\xAD\x30\x4A\xAA\x01\x8F\x42\xCC\xFA\x8B\x88\x14\x78\x65\x1E\x62\x71\x0C\x62\xED\xD8\x1C\x5B\x50\x8B\x8B\x76\x19\x99\x15\x4E\x4A\xC4\xA5\xF7\x56\x64\x1A\x3C\x36\x04\x2A\x29\x03\x97\x96\xCB\x82\xDF\x95\x75\x32\x88\xC2\xE7\x97\xB9\xA7\x7D\x01\x99\x61\x21\x99\x00\xA7\x92\xF2\x65\x90\x4C\xC8\xA9\xF2\xC2\x1C\x38\x32\x03\x44\x17\xE5\x88\xBF\x38\x2F\x33\x6B\x38\xFD\x66\x5C\x59\x86\xF5\x9F\xFF\x83\xB3\xE7\xD0\x64\x8E\x48\x49\x47\x8F\xD5\x08\x38\x3A\x03\x9A\xEE\x83\xE5\x0B\x81\xFC\x65\xA0\x50\xA5\x74\xFA\xF0\xF8\xA5\x1B\xA6\xE9\x95\xFB\xD0\x44\xD2\xC3\xCB\x4A\x80\xAD\x24\x60\x25\xC1\xF1\xE5\xB5\xE3\x2C\x00\xC9\x15\xF9\xFD\xEA\x42\x41\xAD\x85\x37\x22\x3B\x15\xD0\x92\x09\x60\x76\x12\xFC\x82\xCF\x73\x61\xD8\xFA\x34\x05\x05\x33\x38\xB6\x98\x7E\x4E\xEB\x22\x46\x5B\x79\x34\x9A\x22\x40\x0B\x59\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\x5E\x11\xF2\xAA\xA5\x5D\x39\x0A\x01\x27\xEE\x53\x52\xE8\xF7\xBA\xDB\x49\x6C\xE0\x84\xF6\xCA\x9D\x9B\x8E\x27\x11\x0B\xB9\xB7\xA0\xB3\x06\x88\x85\xCA\x30\x1D\xCF\x7E\x85\xC7\x71\x5D\xC2\xD9\xF5\x0C\xCE\xAD\x9F\xDA\x6A\xDD\x57\xF0\xB4\x4A\xAA\x50\x4D\xCE\x71\xEA\xFE\xF4\x4F\xBB\xB7\xB6\x91\x06\x60\x18\xB8\x3F\xBA\xBE\x7B\xEA\xBA\x42\x1E\xB6\xF4\x14\xCB\xCD\x38\x75\x7F\x9E\xCE\xAE\x20\x49\x6A\x79\xC5\x35\xB9\x63\x81\x37\xCE\x97\xB7\xEE\x13\x71\x3F\x9A\xA5\xCC\x94\x1A\x47\x70\xF2\xFE\xCC\x25\x9D\x0F\xE0\xD7\xA4\xC7\x44\x74\xE3\x24\x1E\xEB\x0A\x79\x35\x25\x30\x59\xA1\x33\x4A\xBA\x91\xC9\x8A\x3A\xAC\xA6\x9C\x0B\xEF\x1C\x9E\xD7\x75\xAB\xDC\x88\x45\x1E\x3C\x99\xDE\x38\x5E\x7A\xC3\x39\xDA\xA7\x11\x4B\x8B\xD9\x65\x4C\x56\xD4\xE1\xD3\x88\xB3\x42\xBB\xFA\x24\x82\x2B\x33\x2E\x48\x79\xAC\x79\x8E\x45\x1E\x7C\x39\x48\x18\x9A\xDE\xD8\x1A\xB9\xE9\x62\x4B\x8B\xD9\x3D\xE4\x42\xC4\xCF\xD0\x62\x76\x0F\xCF\x44\xDC\x3F\xB9\xF9\x96\xC2\x96\x56\x13\x2D\xE6\xFC\x93\x4B\x11\x3F\x43\x8B\x39\xFF\xD8\x15\x31\x60\x33\x43\xC8\xA7\x11\x0B\x07\xC3\xCD\x68\x33\x05\xEA\x12\x51\x04\xA3\x3A\x43\x83\xD3\xAC\x96\x94\x63\xCA\x57\x82\x21\xCB\xC0\xAD\x48\x7E\x72\x49\x5D\x7D\x12\xC1\xF4\x52\x09\x3A\x6B\x82\x68\x28\x65\x84\x69\x05\x84\xC2\x4B\x4C\x57\x48\x58\xE4\xC1\x7C\x2A\x80\xD1\x25\x46\xDF\xD4\x2A\x26\xE7\xED\x6D\x09\xDA\x4E\xF5\x73\x6B\x21\x86\x5B\x00\x00\x2F\x2A\x7D\xF5\xD8\x15\xF2\xA0\xCA\xD0\x5E\x60\xD9\x66\x4E\x10\x1E\xAE\xA4\x10\x59\x4E\x01\xC8\xFF\xEE\xC1\xD0\x74\x14\x43\xD3\xD1\xE7\xDF\xEF\x69\x2E\x47\x5B\x95\xDE\xA2\xCA\x36\x49\x01\x0C\xCC\xC4\xF1\x64\x72\x09\x40\x74\xCB\xCF\xBF\x4C\x5A\x39\xBB\x22\x89\x14\x2E\x6E\xE4\x2B\xA6\x29\x6A\xEE\x8F\x2E\xE2\xFE\x68\xBE\x7B\xA1\x79\x19\xED\xF9\xA1\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x5A\xC8\x1A\x4D\x11\xA0\x85\xAC\xD1\x14\x01\x69\xE5\xEC\x02\x80\xBD\x35\x41\xD4\x04\x36\x2E\x61\xA1\x49\x8F\x99\x18\xE3\xDE\x8C\x7B\x8B\xA9\x35\x36\xD6\xA1\xB3\xB3\x35\xDF\xDD\x28\x3A\x92\xC9\x14\xFA\xFA\x87\x30\x37\x1B\x49\xAB\xBD\x6D\x21\xB7\x57\x04\xD0\x55\x66\xA0\xD1\x13\x47\x38\x31\x0F\xE2\x05\xE8\xCC\xA8\x0E\xE0\x03\xDE\x6D\x36\xB0\xE0\xAB\xC0\x78\xCA\x8F\xFE\x25\x81\xC1\xF9\xFC\xA4\xC3\x05\x80\x70\xB8\x0C\xDD\xDD\xED\x68\x6E\xAE\x47\x65\x65\x39\xBC\xBE\xB4\xDF\xFD\x9A\x2D\x38\x70\x70\x27\xE2\xB1\x04\x66\x67\xE7\xF1\x74\x64\x02\x0F\x1F\x0D\x20\x1E\x8F\xDB\x6A\x4B\x7F\xF7\xB7\x7F\xB3\x65\x4E\xDB\x4F\xDA\x03\x68\x4D\x4C\x66\xDC\x51\x4D\x7A\x0C\xFB\xEA\xF1\xDB\xC1\xDC\x8B\x79\xF7\xEE\x2E\xBC\xF1\xE6\x61\x10\xE9\x99\x57\x3E\x48\x24\x92\xF8\xFC\x8F\xE7\x30\x39\x39\xB3\xE5\x67\xB7\x5C\x23\x6B\x11\xE7\x9F\xD6\xC4\x24\x3E\x69\x0F\xE4\xF4\x9C\x5A\xC4\xF9\xC7\xE7\xF3\xE2\xA3\x9F\xBE\x85\xFA\xFA\x9A\x2D\x3F\xBB\xA9\x90\xB5\x88\xDD\x43\x2E\xC5\xAC\x45\xEC\x1E\xEC\x8A\x79\x43\x21\x6B\x11\xBB\x8F\x5C\x88\x59\x8B\xD8\x7D\xD8\x11\xF3\xBA\x42\xF6\x98\x06\x5A\x93\x53\x8E\x75\x4C\x93\x3E\xAD\xC9\x29\x78\x4C\xE7\x76\x0D\x7B\xBA\xDB\xB5\x88\x5D\x88\xCF\xE7\x45\x4F\x4F\xC7\x86\xBF\x5F\xF7\x89\xD8\x5B\xED\x07\x58\xD7\x75\x72\x25\xCC\xF2\xFE\x38\x44\x65\x75\xB9\x63\xC7\xD6\x64\x46\x43\x83\xE2\x88\xDC\x16\xD2\x22\x76\x33\x4E\xDD\x9F\xFA\xFA\x1A\xF8\x7C\x5E\x47\x8E\xAD\xC9\x9C\xF2\x70\xE9\x86\xBF\x5B\x57\xC8\xB5\x70\xAF\x43\x82\xC6\xB9\xFB\xA3\x1D\x3D\xDC\x8D\x61\x10\x7A\xBA\xDB\xD7\xFF\xDD\xCB\x3F\xA8\x08\x78\x10\x4A\xE8\xFA\xC7\x6E\x26\x94\x58\x44\x65\x30\xFB\x8E\x19\x8D\x8D\xB5\x59\x3F\xA6\x26\xBB\xB4\xB5\x37\xAF\xFB\xF3\x57\x84\x5C\xE6\x33\x1D\xEF\x8C\x26\x73\x4A\xBD\xD9\xBF\x4F\x7E\xBF\xAE\x7B\xEC\x76\x02\x81\xF5\xED\x23\x3A\x68\x42\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\xB4\x90\x35\x9A\x22\x40\x0B\x59\xA3\x29\x02\x74\xBA\x07\xC7\x20\x80\x00\x78\xFD\xA0\x1D\xFB\x61\xB4\xEE\x83\xB8\x77\x0E\x3C\x39\x00\x40\xBB\xC0\x6A\xB2\x8B\xAB\x84\x4C\x8D\x3B\x61\x1C\xFF\x04\xA0\x3F\x4F\x14\x78\xF2\x09\xC4\x0F\xFF\x98\xC7\x5E\xA5\x81\x61\x82\x1A\x7B\x40\x1D\x87\x60\xEC\xD8\x0B\xF8\x82\x00\x11\xCC\xBA\x0E\x58\x5F\xFD\x37\xF0\xF4\x70\xBE\x7B\xA8\x79\x81\x44\x32\x89\xCF\xFF\x74\x1E\x33\x2F\xE5\xCB\xDA\xBD\xAB\x13\xA7\x4E\xBC\x9E\xA7\x5E\xA9\xE1\x1A\x21\x53\x43\x17\xCC\xB7\xFE\x0D\x10\x0C\xCB\x91\xEC\x19\xCB\x73\x79\xEB\x53\x3A\x50\x63\x37\x8C\xC3\x3F\x03\x55\x34\x00\xA6\x17\x30\x4D\x3C\xBF\xA0\x60\x39\x8C\xB7\xFF\x1D\xC4\x37\xFF\x03\x3C\x3B\x9A\xD7\x7E\x6A\x24\x96\x65\xE1\xEB\x6F\x2F\xE3\x51\xDF\x10\x84\xF8\x71\x12\xBA\x68\xB4\x70\x62\x0E\x5C\x21\x64\xAA\x6D\x83\x71\xEA\x97\x40\xA8\x02\x78\x39\x16\x96\x0A\x64\x19\x1F\x0A\xC3\x38\xF0\x3E\x8C\xB6\x03\x40\xA0\x14\x30\xD6\x71\xA1\x24\x02\x95\x55\xC1\x78\xEB\xDF\x42\x7C\xF7\xF7\xE0\xB9\xB1\xDC\xF7\x53\xF3\x1C\x66\xC6\xA5\x2B\xBD\xB8\x7F\xBF\x1F\x96\x65\xAD\xFB\xFB\x42\x21\xEF\x2A\xA1\xAA\x26\x18\x27\x7F\x01\x0A\xD7\xBE\x2A\xE2\x42\xC0\x30\x61\xF4\x1C\x87\xF9\xDE\xBF\x87\xD1\x75\x14\x08\x85\xD7\x17\xF1\x33\xC8\x00\x85\xEB\x61\x9C\xFE\x15\xA8\xB2\x31\x77\xFD\xD4\xBC\x42\xEF\x9D\x47\xB8\x7E\xF3\x3E\x12\xC9\x64\xBE\xBB\x92\x31\x79\x15\x32\xD5\xB4\xC2\x38\xF1\x0B\x50\x55\x73\xE1\x8C\xBC\x2F\xE2\xF5\xC3\x38\xFA\x31\xE8\xE0\x4F\x40\x35\x2D\x72\x2D\x6C\x07\xC3\x00\x55\xB7\xC8\x6B\xAF\x68\x70\xB6\x8F\x9A\x75\xE9\xEB\x1F\xC6\xA5\x2B\xBD\x58\x59\x29\x9C\xE9\xF3\x66\xE4\x69\x6A\x4D\xA0\xD6\xFD\x30\x5E\x7B\x17\x54\xD3\xBA\xF9\x08\xE6\x56\x82\x65\x30\x0E\xFD\xC5\xDA\x54\xBA\x44\xBD\xBD\x61\x82\x6A\x5B\x41\x8D\x3D\xE0\xF9\x49\x68\x4B\x76\xEE\x18\x1B\x9F\xC2\x85\x8B\x37\x30\x3F\x5F\x3C\xE1\xBA\xB9\x17\xB2\xE9\x81\xD1\x73\x02\xB4\xF3\x14\xA8\xAA\xB1\x20\x47\x62\x2A\xAF\x81\x71\xF0\x27\xA0\xD6\xFD\xF6\x47\xE1\x97\xE0\x85\x29\xF0\xE3\xCB\xE0\x89\x3E\x68\x11\xE7\x8E\xB9\xC8\x02\xCE\x5F\xB8\x8E\xC9\xA9\xD9\x7C\x77\x25\xAB\xE4\x56\xC8\x81\x12\x18\xBB\xDE\x00\x75\x1F\x05\x95\x17\x66\x10\x3B\x55\x35\xC3\x78\xED\x3D\xD0\x8E\x7D\x80\x37\x8D\xDC\x59\xC9\x18\x78\xE8\x36\xC4\x50\x2F\x78\x6A\x00\x88\x45\xB3\xDF\x49\xCD\xBA\x2C\x2F\xAF\xE0\xC2\x0F\x37\x30\x3C\x32\x5E\x50\x86\x2C\x3B\xE4\x48\xC8\x04\xAA\x6E\x01\x75\x1D\x81\xD1\x71\x08\x08\x15\x66\x82\x37\x0A\xD7\xC1\x38\xF8\xA1\x14\xB1\xA9\xF8\xA7\x63\x01\x9E\x1E\x02\x0F\xF6\x82\xC7\x1E\x82\x23\x13\xD0\x23\x71\xEE\x88\xC5\xE2\xB8\x7C\xED\x36\x1E\xAF\xB3\xCD\x54\x0C\x38\x2F\x64\x5F\x10\xB4\x63\x1F\x8C\xB6\x03\xA0\xA6\x9D\xE9\x8D\x62\x6E\x20\x58\x06\xDA\x77\x46\x4E\xA7\x55\xD7\xF4\xC9\x38\xC4\xE0\x2D\xF0\xE0\x4D\xF0\x44\x3F\x90\x4A\x38\xD3\x47\xCD\xBA\x24\x93\x29\xDC\xBA\xFD\x10\x77\xEE\x3E\x46\x32\x95\xCA\x77\x77\x1C\xC1\x39\x21\x13\x81\xAA\x9A\x41\x3B\xF6\x81\x3A\x0E\x81\x2A\xEA\xF0\x63\x4F\x8F\x02\xC2\xE3\x83\xB1\xF3\x14\x8C\xCE\xC3\xEA\x22\x8E\x47\x21\xFA\xAF\x81\xEF\x9F\x07\x2F\x4E\x3B\xD3\x3F\xCD\x86\x58\x96\xC0\x83\x47\x4F\x70\xFD\xE6\x3D\xC4\x62\xF6\x0A\xA2\x15\x22\xCE\x08\x39\x58\x06\xAA\x6B\x87\xD1\x71\x48\x8E\x60\x66\x01\xA7\x58\x35\x4C\x50\xFB\x41\x18\x7B\xDF\x52\x9F\x4D\xAC\x2C\x40\xF4\x5D\x85\xB8\xF7\x2D\xB0\xBA\xE4\x48\xF7\x34\x1B\xC3\xCC\x18\x1C\x7A\x8A\xCB\x57\x6E\x63\x69\xA9\xB8\x6D\x11\xD9\x15\xB2\x3F\x04\xAA\x6C\x04\x35\x74\x83\xBA\x8E\x14\xAC\x41\xEB\x39\x44\xA0\xFA\x2E\x18\x07\x3F\x94\xDE\x5A\xB6\x61\xF0\xD2\x2C\xF8\xF1\x15\x88\x7B\xDF\x01\xC9\xFC\x95\x45\xDD\xCE\x8C\x4F\x4C\xE3\x87\x4B\xB7\x30\x3B\x37\x9F\xEF\xAE\x38\x4E\x76\x84\xEC\xF5\x83\xC2\x75\xA0\xFA\x4E\x50\xE7\x61\x50\xCD\x0E\x14\xEC\x34\xFA\x42\x22\x20\xF0\x00\x00\x0D\x14\x49\x44\x41\x54\x05\x28\x5C\x07\xE3\xD0\x47\x6A\x2F\x24\x66\xF0\xC2\x24\xF8\xC1\x05\x88\x87\x17\x00\xF1\xAA\xEB\x9F\xC6\x79\xE6\x22\x0B\xF8\xE1\xD2\x4D\x8C\x8D\x6F\x8F\xD2\x47\x19\x0B\x99\xC2\x75\xA0\xBA\x76\x50\xF7\x71\x50\x7D\x67\x61\xBA\x59\xAE\x87\xD7\x0F\xDA\xFB\xB6\xBC\x26\xDB\x30\x78\x71\x1A\xE2\xE6\x9F\xC0\x03\x37\x1C\xEB\x9A\x66\x73\x96\x97\x57\x70\xE9\x72\x2F\xFA\x9F\x8C\xE4\xBB\x2B\x39\x23\x63\x21\x1B\x47\x7F\x2E\xB7\x63\x0A\xD0\xB1\x63\x43\x88\x64\x48\x65\xD7\x51\xB5\x76\xAB\xCB\x10\xBD\x5F\x68\x11\xE7\x91\x58\x2C\x8E\x1B\xB7\xEE\xE3\xF6\xDD\x47\xF9\xEE\x4A\x4E\xC9\x58\x7D\xD4\xD0\x53\x5C\x22\x06\x64\xB8\xE1\xC1\x0F\x01\x8F\x42\xC2\xF6\x64\x1C\xE2\xC1\xF7\xE0\xFE\xAB\xCE\xF5\x4B\xB3\x29\xC9\x54\x0A\xF7\x1F\x3E\xC1\xA5\x2B\xBD\xF9\xEE\x4A\xCE\xC9\xBD\x02\x99\xDD\x5D\xE9\xD1\x30\x61\xEC\x79\x73\x6D\x9D\x6F\x13\x61\x81\x87\x6F\x43\xDC\xFE\xD2\xDD\xD7\x56\xC4\x08\x21\x30\x38\x38\x8A\x6F\xCF\x5D\x29\x4A\x87\x8F\xAD\xC8\xAD\x90\x85\x05\xAC\xCC\x03\x71\xF7\x6E\x05\x50\x75\x0B\x8C\x3D\x6F\x2A\xB4\x60\xF0\xCC\x30\xAC\x4B\xBF\x06\xAC\xE2\x74\x36\x70\x3B\xCC\x8C\x89\xC9\x19\xFC\xE9\x8B\xEF\x91\x48\x14\x7E\x48\x62\x3A\xE4\x4E\xC8\x56\x0A\xE2\xC1\xF7\x48\xFD\xFE\x3F\xBA\xD7\x31\xC2\x30\x61\x1C\xFB\x04\xF0\x06\xEC\xB7\x89\x2E\x40\x7C\xF7\xBF\x81\xF8\x8A\x73\xFD\xD2\x6C\xCA\xE2\xE2\x32\xFE\xF0\xD9\xB7\x88\xDA\x08\x49\xF4\x78\x0A\x30\xD2\xCE\x06\x39\xF0\xB5\x66\xF0\xE8\x43\x88\xEB\x9F\x81\x23\x63\xAE\x9E\x7A\x52\xFB\x41\x50\x6D\x9B\xFD\x06\x42\xC0\xBA\xF0\x29\xB8\xC0\xD2\x11\x15\x13\xAB\xB1\x38\x7E\xFF\xD9\xB7\x98\x5F\xD8\xDA\xE1\xA6\xA9\xB1\x0E\x4D\x4D\x75\xB8\x7A\xED\x4E\x0E\x7A\x96\x5B\x1C\x15\x32\x2F\x4C\x41\xDC\xFC\x1C\x3C\xF6\x10\x48\xAC\x02\x42\xB8\x37\xF6\x78\x6D\x6D\xAC\xD2\x3F\x1E\x7D\x00\x1E\x7F\xEC\xEA\x97\x53\x31\x93\x4A\x59\xF8\xE3\x9F\xCE\x61\x7C\x62\x7A\xCB\x68\xA6\xEA\xAA\x0A\xFC\xC5\x4F\xDE\xC2\xC3\xC7\x03\x39\xEA\x5D\x6E\x71\x46\xC8\xF1\x28\xC4\x7D\x69\xC1\xE5\x95\x85\x82\x08\x12\xA0\xC6\x1E\x50\xB5\x82\x81\x2B\x95\x80\xB8\xF3\xB5\x5E\x17\xE7\x09\x21\x04\xBE\xF9\xEE\x32\x06\x07\x47\xB7\x34\x6E\x95\x96\x86\xF0\xE1\xFB\xA7\x51\x59\x59\x0E\x2A\x16\x3F\x87\x97\xC8\xAE\x90\xAD\x14\x78\xA8\x17\xE2\xE1\x05\x99\xF5\x22\x16\x45\x41\x84\xEA\x19\x26\x8C\x9D\x27\x95\x42\x13\x79\xE4\x2E\x78\x7A\x68\xED\x3B\x02\xFC\x41\x50\x28\x2C\x73\x76\x05\x4A\xE5\xCB\x2B\xB1\xFA\xFC\x8B\xA3\xF3\xDA\xCB\x2B\x4B\x30\x33\x2E\x5F\xBD\x8D\x7B\x0F\xFA\xB7\x8C\x66\x0A\x04\xFC\x78\xEF\x9D\x13\x68\x6A\xAC\x83\x61\x14\xD9\x36\xE9\x0B\x64\x49\xC8\x0C\x9E\x1A\x84\x78\x70\x01\x98\x1E\x92\x6B\xC6\x02\x7A\x68\xA9\xBA\x45\x86\x58\xDA\x25\xB1\x0A\xF1\xE0\x7B\x50\x49\x05\xA8\xA9\x07\x54\xDF\x05\x94\x54\x00\x1E\xAF\x0C\x10\x31\x3C\x00\x0B\xF9\x37\x10\x02\x10\x29\x20\x16\x05\x47\xC6\x64\x1A\xDC\xD9\x11\xF0\xD2\x1C\x0A\xE2\x25\xE7\x42\xEE\xDE\xEF\xC3\x8D\x5B\xF7\xB7\x8C\x66\xF2\x78\x4C\x9C\x3E\x79\x08\x9D\x1D\x3B\x8A\xD6\xC8\xF5\x8C\x8C\x85\xCC\xCB\x73\xE0\xA1\x5E\xB9\x5E\x9C\x9F\x00\x92\x05\x16\x2A\x46\x04\xEA\x3A\xA2\x96\xB2\x27\x11\x83\xD1\x73\x02\x28\xAD\x02\x4A\xC2\xA0\x60\xF9\xD6\xCE\x23\x42\x80\x6A\x76\x80\x5B\xA3\x40\x6C\x19\x3C\x39\x00\x1E\xB8\x09\x8E\x8C\x43\x0B\xDA\x3E\x4F\x06\x46\x70\xE9\x4A\xEF\x96\xD1\x4C\x44\x84\xA3\x87\xF7\x63\xEF\x9E\x2E\xF8\x7C\x05\x1C\x7D\x67\x93\x8C\x85\x2C\xAE\xFE\x4E\x5A\xA3\x57\x0A\x34\x91\x99\xBF\x04\xD4\xB2\x47\xB1\x4D\x08\xD4\xF6\x9A\xDA\x36\x95\x61\xC8\xF0\xCE\x60\x19\x00\x80\xC2\xF5\xE0\xDA\x36\xF0\x64\x3F\xB8\xFF\x3A\x78\x69\x46\xAD\x0F\xDB\x90\xF1\xF1\xB5\x68\xA6\xD9\xAD\xA3\x99\xF6\xED\xED\xC6\xC1\x03\xBB\x11\x0A\x2A\xDC\xA3\x02\x26\xF3\x11\x79\xF4\x21\x0A\x79\x44\xA1\xCA\x46\x50\x49\xA5\x5A\xA3\x6C\x64\x39\x59\x13\x35\x55\x34\x80\xC3\xF5\x10\xF7\xCF\xCB\x1C\x5E\x9A\x75\x99\x8B\x2C\xE0\x87\xCB\xF6\xA2\x99\x3A\x3B\x5A\x70\xEC\xC8\x6B\x08\x97\xAB\x84\x9E\x16\x36\x59\x58\x23\x17\xAE\x88\x01\x59\xAA\x26\xAF\x5B\x62\xA1\x72\x50\xFB\x41\x18\xFE\x10\xC4\xC3\x1F\xC0\x23\x77\xE4\xBA\x5A\xF3\x9C\xE5\xE8\x0A\x2E\x5F\xE9\xC5\xC0\xE0\xD3\x2D\xB7\x99\x1A\x1B\x6B\x71\xE2\xD8\x41\xD4\xD6\x28\xBE\x9C\x0B\x1C\x57\x94\x8C\xC9\x1B\xA6\x47\x31\x4C\xD1\x21\x0C\x13\xD4\xBC\x4B\x8A\x19\x00\x0F\xDF\xD6\x7B\xD3\x6B\xC4\xE3\x09\x5C\xBF\x79\x0F\xF7\x1F\x3E\x81\x65\x6D\xFE\x82\xAB\xAE\xAA\xC0\x89\xA3\x07\xB0\xA3\x65\xFB\x25\xFD\x2F\x5E\x7B\xBC\x0D\x28\x14\x76\x51\xD9\x16\x92\x95\x37\x0E\xBC\x2F\x93\xF6\x6B\x90\x4C\xA5\x70\xE7\xDE\x63\xDC\xBC\xF5\x00\xC9\xE4\xE6\xDB\x4C\xA5\xA5\x21\x1C\x39\xBC\x0F\xDD\x5D\xDB\xF3\x6F\xB7\xAD\x85\x8C\xAA\x26\xC0\x9F\x46\x95\x08\x07\xA1\x9A\x56\x18\xFB\xDF\x05\x95\x55\xE7\xBB\x2B\x79\xC5\xB2\x04\xFA\xFA\x87\x71\xF9\xEA\xED\x2D\xB7\x99\x02\x01\x3F\x0E\xBE\xB6\x0B\xFB\xF7\xF6\x14\xF5\x5E\xF1\x66\x6C\xCF\xAB\x5E\x83\x2A\x1B\xB3\x9C\xD1\x84\xA5\x23\x48\x86\xDE\x5E\xD4\xFA\x1A\xA8\xFB\xB8\x7B\xDD\x59\x1D\x86\x99\xF1\x74\x74\x02\x17\x2E\xDE\xD8\x72\x9B\xC9\xEB\xF1\x60\xF7\xCE\x0E\x1C\x39\xB4\xAF\xE8\xF7\x8A\x37\x63\x7B\xAF\x91\x83\x19\x26\xCA\x67\x01\x5E\x8E\x48\xEF\xAD\x54\x02\x48\xC6\xC1\xAB\x4B\x20\x8F\x0F\x08\x96\x01\xBE\x00\xC8\x5F\x02\x94\x84\xA1\x94\xC3\xCC\x30\x60\xEC\x3C\x09\x1E\xBC\x25\xB7\xF6\xB6\x19\x53\xD3\x73\x38\x7F\xE1\xFA\x96\xDB\x4C\x86\x61\xA0\xBD\xBD\x19\xA7\x4F\x1E\x42\x20\x50\xA0\xF9\xD2\xB3\xC4\xB6\x16\x32\x29\x65\xC6\x7C\x89\x44\x0C\x3C\x3F\x01\x7E\x72\x4D\x3A\x75\x44\xE7\x5F\x70\xC3\x24\x69\x8D\xAE\xA8\x07\xD5\xB4\xCA\x84\x84\xE1\x3A\xB5\x11\x36\x54\x0E\xEA\x3E\x06\xBE\xF6\xFB\x82\xF2\x92\xCB\x94\x85\x85\x25\x5C\xB8\x78\x03\xA3\x63\x93\x9B\x7E\x8E\x88\xD0\xD8\x50\x8B\x77\xDE\x3A\x86\xD2\xD2\x50\x8E\x7A\xE7\x5E\xB6\xB5\x90\xD5\x52\xDC\xBE\xC0\xEA\x12\xC4\xD3\x7B\xE0\x5B\x67\xC1\x4B\xEB\x15\x03\x63\x60\x65\x01\xBC\xB2\x00\x1E\x7B\x04\x9A\x19\x86\x71\xF8\x67\xB2\x7C\xAC\x82\x3F\xB7\xD1\x79\x08\xFC\xF0\x7B\xF0\xE2\xF6\x70\x16\x59\x5D\x8D\xE1\xE2\x95\x5E\x3C\xEE\x1B\xDA\xF2\xB3\x55\x95\x61\xBC\x77\xE6\x04\xAA\x2A\xC3\x39\xE8\x99\xFB\xD9\xBE\x6B\x64\xA2\xF4\x84\x6C\xA5\x20\x7A\xBF\x80\xF8\xFE\xD3\x0D\x44\xFC\x2A\x3C\xF6\x08\xE2\xBB\xBF\x07\x4F\x0D\x42\x69\xDF\x3D\x14\x96\x09\xFE\xB7\x01\xC9\x64\x0A\xD7\x6F\xDE\xC7\xED\x3B\x5B\x27\xCD\x2B\x2D\x0D\xE1\xCC\xDB\xC7\xD1\xD8\x50\xE0\x79\xD3\xB3\xC8\xF6\x15\xB2\xC7\x07\x4A\xC3\x43\x8B\xA7\x87\x20\x1E\x5D\x94\x41\x11\x2A\xED\x16\x67\x20\xAE\xFE\x16\x48\xAA\x85\x74\x52\x43\x37\x8A\x21\x47\xF8\x66\x08\x21\xCB\xBA\xFC\x70\xE9\xE6\x96\x21\x89\x3E\x9F\x17\x6F\x9C\x3A\x8C\xAE\x4E\x85\x90\xD3\x6D\xC0\xF6\x9D\x5A\xA7\x63\xAD\x16\x96\x4C\xB0\x97\x66\x7C\x35\xCF\x3E\x85\x18\xB8\x21\x43\x26\x6D\x42\xD5\x2D\x80\xD7\x57\x78\xC1\x28\x36\x61\x66\x0C\x0D\x8F\xE1\x8B\x2F\x7F\xB0\x95\x34\xEF\xF0\xA1\xBD\xD8\xBF\xB7\x7B\x4B\xE7\x90\x8D\x10\xC2\xFE\x8C\x88\x99\x37\x3C\x8F\x69\xBA\x6B\x0C\xDC\xBE\x42\x4E\x25\xC1\xC2\x52\x1A\xEB\x78\xEC\x11\x78\x2C\x83\x7C\xC9\xCC\xE0\x3B\x5F\x03\x5D\x47\xEC\xD7\xC3\x0A\x94\x82\xAA\x5B\x64\x15\xC7\x22\x64\x6A\x7A\x0E\xFF\xF2\xF9\x77\xB6\xAA\x24\x9A\xA6\x89\xE1\xE1\x71\x8C\x8E\x6E\x6E\x08\xDB\x8C\x45\x85\x1A\x50\x7D\x4F\x86\xD7\x2D\x37\x63\x9A\xA6\x4C\x54\x50\xE1\x9E\xF2\xC0\xDB\x57\xC8\xC2\x02\x2C\xB5\x8C\x8B\x3C\x3D\x94\xB1\x05\x99\x17\x67\xC0\x43\xB7\x41\x9D\x87\xED\x35\x30\x4C\x50\x65\x53\x51\x0A\x79\x7E\x61\x09\x7F\xF8\xE3\xB7\x88\x46\xB7\x4E\x9A\x07\x00\x96\x65\x61\x62\x32\x33\xC3\x9F\x4A\x81\xF3\x68\x74\x15\x2B\x2B\xAF\xD6\xED\xF2\x98\x26\x52\x5B\x78\x9A\xE5\x9A\xED\x2B\x64\x40\x79\xBA\x9A\x95\x24\x7B\x2C\xC0\xF3\x93\x6A\xAB\xDE\x80\xBB\xBC\xCF\xB2\x41\x22\x99\xC4\x17\x5F\x5D\xC0\xDC\xDC\x82\x52\xBB\x5C\xE6\xAC\x66\xE6\x75\x85\x2F\x0C\x72\x5D\xA8\x90\xBB\x26\xFA\xB9\x46\x75\xDD\x99\xA5\x6C\x99\xBC\x3C\x0B\x25\xEB\xB5\xBF\xF8\xF6\x49\x13\xF1\x24\xA6\xA6\xE7\xB6\x65\x32\x79\x27\xD0\x42\xB6\x0B\x33\x10\xCD\x52\x79\xCE\xA5\x39\x40\xC1\xE8\x42\x2E\xF3\x07\xCF\x06\xCC\x0C\x91\xA6\xC1\x4A\xF3\x2A\xDB\x5A\xC8\xAC\x52\xF1\xC2\x4A\x82\xB3\x64\x39\xE6\xE5\x39\x80\x15\xD6\xDA\x2A\x99\x48\x34\xDB\x92\x6D\x2D\x64\xA8\x54\xBC\x30\x4C\xFB\x96\xE6\xAD\x10\x29\xB5\x78\x63\x15\xD1\x6B\xB6\x25\xDB\x5A\xC8\x4A\x89\xEF\x0C\x13\x14\x2A\xCB\xCA\x79\x29\x50\xAA\x54\xC1\x92\xE3\xF6\xAC\xBA\x9A\xED\xCB\xF6\xB6\x5A\x2F\xCD\xCA\x75\xB2\xDD\xA9\x6B\x49\x25\x30\x3D\x9C\xF9\x79\x4B\x2A\xD5\x02\x28\x5C\x5C\xF4\x2E\x5D\x88\x08\x3E\xBF\x0F\x56\x8E\x8D\x5D\x96\x65\x21\x95\xB2\x37\xC3\x31\x4D\x73\xDD\xD0\x48\x8F\x69\xC2\x70\x59\xA2\xFB\x6D\x2D\x64\x5E\x59\x04\xAF\x2C\x82\xC2\xF6\x84\x4C\x25\x15\x59\xD9\x76\xA0\xB2\x2A\x35\xCF\xB2\x58\xF1\x09\xD9\xE7\xF7\xE2\xE4\xB1\x03\xB6\x45\x95\x2D\x06\x86\x46\xD1\xFF\xC4\xDE\xCB\xB8\xB1\xA1\x16\xBB\x77\x76\xBC\xF2\x73\x32\x08\x25\x25\x0A\xE9\x93\x73\xC0\xB6\x16\x32\x92\x71\xB9\x4E\x0E\xD7\xD9\xFB\x7C\x45\x83\x9C\x12\x2B\xFA\x59\xFF\x18\x02\xCA\x6D\x9E\x0F\x90\xDE\x60\x45\x58\x24\xCE\xE7\xF5\xE2\xC0\x6B\xBB\x72\x7E\xDE\x78\x22\x61\x5B\xC8\xB5\x35\x95\x38\x7C\x68\xAF\xC3\x3D\xCA\x0E\xDB\x7A\x8D\x2C\x2B\x64\xD8\x4F\x41\x4B\x75\xED\xA0\xD2\xAA\xCC\x4E\x19\x2C\x95\x99\x3B\xED\x92\x8C\x03\x73\xA3\x99\x9D\x53\x53\xF4\x6C\x73\x21\x03\x3C\xFA\x48\x66\xF8\xB0\x01\x55\xD4\x83\x3A\x0E\x2A\x19\xAA\x7E\x7C\x00\x82\xB1\x63\xBF\x8C\x4B\xB6\xDB\xBF\xA5\x19\xDB\xE1\x92\x9A\xED\x8B\x16\xF2\xFC\x04\x78\x66\xC4\xE6\xA7\x09\xD4\x7D\x3C\xFD\xC4\x78\xA1\x30\x68\xD7\x29\xA5\xF5\x31\x4F\x0D\x6C\xAB\x0C\x21\x9A\xF4\xD8\xF6\x42\x86\x95\x04\x0F\xF5\xC2\xEE\x36\x14\x85\x6B\x41\xBB\x4E\xAF\xA5\xEE\xB1\xFB\xE7\x23\xA0\xA4\x12\x46\xF7\x71\x50\x4D\x8B\x5A\xDF\x32\x89\xB6\xD2\x6C\x1B\xB6\xB7\xB1\x6B\x0D\x1E\x7D\x20\x2D\xC3\xB6\x32\x86\x10\x8C\xBD\x6F\x83\x4B\x2B\x21\xEE\x7E\x0B\x9E\x1F\x07\x12\x71\x6C\xF8\x22\x30\x3D\xA0\xB2\x1A\xD0\xAE\x53\x30\x76\x9D\x86\x4A\x92\x00\x9E\x7D\x0A\x1E\xEF\xB3\xFD\x79\xCD\xF6\x45\x0B\x19\x00\x2F\x47\x64\xC0\xFF\xEE\x37\xEC\xAD\x7F\x0D\x03\xD4\x7E\x10\x66\x4D\x2B\x44\xEF\x59\xF0\xF4\x30\x90\x4A\x80\xAD\x94\xF4\xDA\x02\xA4\x80\x4D\x2F\x50\x5A\x05\xE3\xB5\xF7\x41\x8D\xDD\x6A\x9D\xB2\x52\xB2\x4C\x6D\xF2\xD5\x30\x3A\x8D\xE6\x65\xB4\x90\x01\x80\x05\x44\xEF\x97\xA0\x96\x3D\xA0\xB2\x1A\xFB\xED\x4A\x2B\x61\x9C\xFE\x15\x20\x04\x38\x1A\x01\x96\x66\xC0\x8B\xB3\x00\x01\x54\xD1\x00\xAA\xA8\x4F\x33\x01\x3E\x83\xE7\x46\xC1\xC3\x77\xD2\x68\xAB\xD9\x8E\x68\x21\x3F\x63\x65\x01\xE2\xE6\x9F\x60\x9E\xFE\x95\x52\xA6\x4B\x00\x72\x84\x2E\xAB\x06\xCA\xAA\x41\x4D\x59\xE8\x4B\x32\x0E\x71\xEB\xAC\x1E\x8D\x35\xB6\xD1\xC6\xAE\x17\xE0\xFE\xAB\x6B\xC6\xA5\x3C\x86\x8D\x33\x43\xF4\x7E\x09\x1E\xB9\x97\xBF\x3E\x68\x0A\x0E\x2D\xE4\x17\x61\x86\xB8\xF8\x4F\xE0\xD9\xFC\x39\x60\xF0\xE0\x4D\x88\xBB\xDF\xA2\xD0\xCB\xD5\x6A\x72\x8B\x16\xF2\x4B\x70\x34\x02\xF1\xCD\xFF\xCC\x43\xD1\x71\x06\x8F\xDC\x85\x75\xE9\xD7\xCA\xB9\xC4\x34\x1A\x2D\xE4\x97\x61\x06\x2F\xCD\x41\x9C\xFB\x3F\xE0\xB1\x87\xB9\x39\xA7\xB0\x20\xEE\x9D\x83\x75\xE1\x53\x60\x75\x39\x37\xE7\xD4\x14\x15\x5A\xC8\xEB\xC1\x02\xBC\x34\x0B\xF1\xC3\x3F\x41\xDC\xFA\x13\x10\x73\x50\x5C\xB1\x65\x88\xAB\xBF\x83\xE8\xFD\x02\x58\x59\x84\x9E\x52\x6B\xD2\x41\x5B\xAD\x37\x82\x85\x4C\x5D\x7B\xFF\xBC\xAC\xDF\xD4\x75\x04\x46\xC7\x61\x20\x8D\xEA\x14\xEB\x92\x88\x41\x0C\xDC\x00\x0F\xDC\x90\x15\x17\x8B\x30\x54\x51\x93\x3B\xB4\x90\x37\x85\x81\xD5\x25\x70\x2C\x0A\x44\x17\x60\x3D\x7D\x20\x23\xA0\xAA\x5B\x64\xE0\x83\x6A\x76\x4B\x61\x81\x17\xA6\xC0\xD3\x43\xD2\x2A\x1D\x19\x07\x47\xE7\x00\x9D\x49\x52\x93\x21\xB9\x17\xB2\xB0\x60\xFD\xE1\x3F\xE5\xFC\xB4\x19\xC1\x02\xBC\x34\x03\xAC\xCC\x83\x67\x47\x40\xC1\x72\x20\x58\x26\xFD\xAD\xCB\x6B\x41\xBE\x20\xE0\x0B\xC8\x4C\x23\x5E\x3F\xE0\xF1\xC9\x62\xE7\xC9\x98\xFC\x4A\xC4\xC0\x4B\xB3\x6B\xE5\x57\x23\xC0\xCA\xA2\x8C\x68\xD2\xC1\x10\x39\xE7\xD4\x89\xD7\x71\xEA\xC4\xEB\xF9\xEE\x46\xD6\xD1\x23\xB2\x0A\x56\x0A\x58\x8E\xC8\xE2\xE6\xD0\xAB\x59\x8D\x7B\xD0\xC6\x2E\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\x78\x45\xC8\x23\x8B\x71\x58\xD9\x2A\x1F\xAA\x71\x04\xCB\xF4\x62\x64\x31\x3B\xB5\x9A\x5F\x24\x32\xB7\x90\xF5\x63\x6A\xB2\xCB\xD4\xD4\xFA\xC5\x0A\xD6\x1D\x91\xE7\x3D\x61\x47\x3B\xA3\xC9\x0C\xA7\xEE\xCF\xF0\xC8\xB8\x23\xC7\xD5\x64\x8F\xBE\xBE\xA1\x75\x7F\xBE\xAE\x90\x47\x93\x7A\x44\x76\x33\x4E\xDD\x9F\x87\x0F\xFB\x95\xEA\xAF\x6B\x72\x4B\x3C\x96\xC0\xDC\xDC\xFC\xBA\xBF\x5B\x57\xC8\x7D\x0B\x29\x47\x3B\xA4\xC9\x0C\xA7\xEE\x8F\x65\x09\x2C\x2F\xE9\xB8\x68\xB7\x32\x3B\xBB\xBE\x88\x81\x0D\x84\x3C\xB6\x94\x40\xC2\xAB\x18\x6B\xAB\xC9\x09\x09\x6F\x08\x63\x4B\x09\xC7\x8E\x3F\x35\xA9\x0B\xC6\xB9\x95\x91\x91\x89\x0D\x7F\xB7\xA1\xD5\xFA\xAB\xC5\x32\x58\xA6\xCF\x91\x0E\x69\xD2\xC3\x32\x7D\xF8\x6A\xB1\xCC\xD1\x73\x7C\xFD\xCD\x45\xCC\x4C\x47\x1C\x3D\x87\x46\x9D\xA1\x81\x31\xDC\xBE\xFD\x60\xC3\xDF\x6F\x28\xE4\xBE\x48\x0C\x67\x97\x2B\xB5\x98\x5D\x82\x65\xFA\x70\x76\xB9\x12\x7D\x11\xE7\x93\xD6\xFF\xE6\x37\x67\xB5\x98\x5D\xC4\xD0\xE0\x38\xCE\x7E\x71\x7E\xD3\xCF\x6C\xBA\x8F\xAC\xC5\xEC\x0E\x72\x29\xE2\x67\x68\x31\xBB\x83\xA1\xC1\x71\x9C\x3D\x7B\x6E\xCB\xCF\x6D\xE9\x10\xF2\x4C\xCC\x11\x7F\x35\x84\xA1\x13\x8A\xE4\x12\x61\x78\x10\xF1\x57\xE7\x5C\xC4\xCF\xF8\xCD\x6F\xCE\x62\x72\x7C\x16\x89\x84\xCE\xB3\x9D\x6B\x62\xAB\x71\xDB\x22\x06\x6C\xA6\xFA\xE9\x8B\xC4\xD0\x17\x01\x80\x12\xEC\xAE\x0E\xA0\xA3\x84\x50\x6F\xC4\x10\xB4\xB4\x85\x33\xDB\xAC\x9A\x25\x98\x14\x01\x0C\x44\x19\x0F\x66\x63\x00\x52\x6B\x5F\xF9\xE1\x77\xBF\xFF\x12\x00\x50\x57\x57\x83\xAE\xAE\x56\x34\x36\xD6\x22\x5C\x51\xA6\x50\x1C\x56\x63\x07\x4B\x08\xCC\xCF\x2D\x62\x74\x6C\x12\x7D\x7D\x43\x98\x9F\x5F\x54\x6A\xAF\x3C\xC4\x3E\x98\x8D\xE1\xC1\x73\xC3\xA6\xB6\x6C\x67\x1F\x06\xB0\x9A\xEF\x4E\xBC\xC2\xD4\xD4\x0C\xA6\xA6\x66\xF2\xDD\x0D\xCD\x06\x68\x5F\x6B\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\xD0\x42\xD6\x68\x8A\x00\x2D\x64\x8D\xA6\x08\xF8\xFF\xAE\x19\xF7\x65\x27\x62\x29\xBF\x00\x00\x00\x00\x49\x45\x4E\x44\xAE\x42\x60\x82",
    img = nil
}
return sleashGames
